From dbe2924ccea88227370c2fc071c69fe1a9866c73 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Wed, 11 May 2022 16:39:18 +0200
Subject: [PATCH] Implement [Nacho-0024] Do not create new BlockPosition when
 loading chunk


diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 2ab55d8b..e4791c03 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -241,7 +241,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         if (!this.chunkCoordIntPairQueue.isEmpty()) {
             ArrayList<Chunk> chunkList = Lists.newArrayList();
             Iterator iterator1 = this.chunkCoordIntPairQueue.iterator();
-            ArrayList arraylist1 = Lists.newArrayList();
+            ArrayList<TileEntity> tileEntities = Lists.newArrayList();
 
             Chunk chunk = null;
 
@@ -249,11 +249,11 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
                 ChunkCoordIntPair chunkcoordintpair = (ChunkCoordIntPair) iterator1.next();
 
                 if (chunkcoordintpair != null) {
-                    if (this.world.isLoaded(new BlockPosition(chunkcoordintpair.x << 4, 0, chunkcoordintpair.z << 4))) {
+                    if (this.world.isLoaded(chunkcoordintpair.x << 4, 0, chunkcoordintpair.z << 4)) {// [Nacho-0024] Do not create new BlockPosition when loading chunk
                         chunk = this.world.getChunkAt(chunkcoordintpair.x, chunkcoordintpair.z);
                         if (chunk.isReady()) {
                             chunkList.add(chunk);
-                            arraylist1.addAll(chunk.tileEntities.values()); // CraftBukkit - Get tile entities directly from the chunk instead of the world
+                            tileEntities.addAll(chunk.tileEntities.values()); // CraftBukkit - Get tile entities directly from the chunk instead of the world
                             iterator1.remove();
                         }
                     }
@@ -269,10 +269,10 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
                     this.playerConnection.sendPacket(new PacketPlayOutMapChunkBulk(chunkList));
                 }
 
-                Iterator iterator2 = arraylist1.iterator();
+                Iterator<TileEntity> tileEntitiesIterator = tileEntities.iterator();
 
-                while (iterator2.hasNext()) {
-                    TileEntity tileentity = (TileEntity) iterator2.next();
+                while (tileEntitiesIterator.hasNext()) {
+                    TileEntity tileentity = (TileEntity) tileEntitiesIterator.next();
 
                     this.a(tileentity);
                 }
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 7e514f2c..4cc02f30 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -326,6 +326,10 @@ public abstract class World implements IBlockAccess {
         return getChunkIfLoaded(blockposition.getX() >> 4, blockposition.getZ() >> 4) != null; // Paper
     }
 
+    public boolean isLoaded(int blockposition_x, int blockposition_y, int blockposition_z) {
+        return getChunkIfLoaded(blockposition_x >> 4, blockposition_z >> 4) != null; // Paper
+    }
+
     public boolean a(BlockPosition blockposition, boolean flag) {
         return !this.isValidLocation(blockposition) ? false : this.isChunkLoaded(blockposition.getX() >> 4, blockposition.getZ() >> 4, flag);
     }
-- 
2.36.0.windows.1

