From c4b0dd83f4d7d3d1087d17179f9bbc2618a85703 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Fri, 24 Jun 2022 22:55:52 +0200
Subject: [PATCH] Add UnknownCommandEvent


diff --git a/src/main/java/net/titanium/event/UnknownCommandEvent.java b/src/main/java/net/titanium/event/UnknownCommandEvent.java
new file mode 100644
index 00000000..d3c83123
--- /dev/null
+++ b/src/main/java/net/titanium/event/UnknownCommandEvent.java
@@ -0,0 +1,85 @@
+package net.titanium.event;
+
+import org.bukkit.command.CommandSender;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.jetbrains.annotations.NotNull;
+
+public class UnknownCommandEvent extends Event implements Cancellable {
+
+    private static final HandlerList HANDLERS = new HandlerList();
+
+    private final CommandSender sender;
+
+    private final String fullCommand;
+    private final String command;
+
+    private boolean cancelled;
+
+    public UnknownCommandEvent(CommandSender sender, String fullCommand) {
+        this.sender = sender;
+
+        this.fullCommand = fullCommand;
+        int spaceIndex = fullCommand.indexOf(' ');
+        this.command = fullCommand.substring(0, spaceIndex != -1 ? spaceIndex : fullCommand.length());
+    }
+
+    /**
+     * @return the sender that was trying to use the command
+     */
+    @NotNull
+    public CommandSender getSender() {
+        return sender;
+    }
+
+    /**
+     * @return the full command with arguments for eg. "/test arg1 arg2" will return "test arg1 arg2"
+     */
+    @NotNull
+    public String getFullCommand() {
+        return fullCommand;
+    }
+
+    /**
+     * @return the command name for eg. "/test arg1 arg2" will return "test"
+     */
+    @NotNull
+    public String getCommand() {
+        return command;
+    }
+
+    /**
+     * Determines if this event is cancelled.
+     *
+     * <p>When this event is cancelled, the default unknown command message won't be send</p>
+     *
+     * @return {@code true} if this event is cancelled, {@code false} otherwise
+     */
+    @Override
+    public boolean isCancelled() {
+        return this.cancelled;
+    }
+
+    /**
+     * Sets if this event is cancelled.
+     *
+     * <p>When this event is cancelled, the default unknown command message won't be send</p>
+     *
+     * @param cancel {@code true} if this event should be cancelled, {@code false} if not
+     */
+    @Override
+    public void setCancelled(boolean cancel) {
+        this.cancelled = cancel;
+    }
+
+    @Override
+    public HandlerList getHandlers() {
+        return HANDLERS;
+    }
+
+    public static HandlerList getHandlerList() {
+        return HANDLERS;
+    }
+
+}
diff --git a/src/main/java/org/bukkit/event/player/PlayerEvent.java b/src/main/java/org/bukkit/event/player/PlayerEvent.java
index 0d4833f6..266aac01 100644
--- a/src/main/java/org/bukkit/event/player/PlayerEvent.java
+++ b/src/main/java/org/bukkit/event/player/PlayerEvent.java
@@ -13,10 +13,9 @@ public abstract class PlayerEvent extends Event {
         player = who;
     }
 
-    PlayerEvent(final Player who, boolean async) {
+    public PlayerEvent(final Player who, boolean async) { // Titanium - make public
         super(async);
         player = who;
-
     }
 
     /**
-- 
2.36.0.windows.1

