From 6cb3de8431ba334f64bd0073a889b49069b0794b Mon Sep 17 00:00:00 2001
From: cswhite2000 <18whitechristop@gmail.com>
Date: Wed, 8 Aug 2018 17:08:31 -0700
Subject: [PATCH] Implement [SportPaper-0058] Potion effect events by
 cswhite2000


diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 053f720da..aac13ff81 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -18,11 +18,16 @@ import com.google.common.collect.Lists;
 import net.titanium.knockback.KnockbackProfile;
 import net.titanium.util.MathUtil;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.craftbukkit.potion.CraftPotionUtils;
 import org.bukkit.entity.LivingEntity;
 import org.bukkit.entity.Vehicle;
 import org.bukkit.event.entity.EntityDamageEvent;
 import org.bukkit.event.entity.EntityDamageEvent.DamageModifier;
 import org.bukkit.event.entity.EntityRegainHealthEvent;
+import org.bukkit.event.entity.PotionEffectAddEvent;
+import org.bukkit.event.entity.PotionEffectExpireEvent;
+import org.bukkit.event.entity.PotionEffectExtendEvent;
+import org.bukkit.event.entity.PotionEffectRemoveEvent;
 import org.bukkit.event.vehicle.VehicleExitEvent;
 // CraftBukkit end
 
@@ -465,29 +470,45 @@ public abstract class EntityLiving extends Entity {
         this.hurtTimestamp = nbttagcompound.getInt("HurtByTimestamp");
     }
 
-    // CraftBukkit start
+    // SportBukkit start
+    /* // CraftBukkit start
     private boolean isTickingEffects = false;
     private List<Object> effectsToProcess = Lists.newArrayList();
-    // CraftBukkit end
+    // CraftBukkit end */
+    // SportBukkit end
 
     protected void bi() {
-        Iterator iterator = this.effects.keySet().iterator();
+        Iterator iterator = com.google.common.collect.ImmutableSet.copyOf(this.effects.keySet()).iterator(); // SportBukkit - copy to allow concurrent modification
 
-        isTickingEffects = true; // CraftBukkit
+        //isTickingEffects = true; // CraftBukkit // SportPaper
         while (iterator.hasNext()) {
             Integer integer = (Integer) iterator.next();
+            if(!this.effects.keySet().contains(integer)) continue; // SportBukkit - skip if effect was removed during iteration
             MobEffect mobeffect = (MobEffect) this.effects.get(integer);
 
             if (!mobeffect.tick(this)) {
                 if (!this.world.isClientSide) {
-                    iterator.remove();
+                    // SportBukkit start - fire event
+                    PotionEffectExpireEvent event = new PotionEffectExpireEvent((LivingEntity) this.getBukkitEntity(),
+                            CraftPotionUtils.toBukkit(mobeffect));
+                    this.world.getServer().getPluginManager().callEvent(event);
+                    if(event.isCancelled()) {
+                        // Duration must be extended if event is cancelled
+                        CraftPotionUtils.extendDuration(mobeffect, event.getDuration());
+                        continue;
+                    }
+
+                    //iterator.remove();
+                    this.effects.remove(integer);
+                    // SportBukkit end
                     this.b(mobeffect);
                 }
             } else if (mobeffect.getDuration() % 600 == 0) {
                 this.a(mobeffect, false);
             }
         }
-        // CraftBukkit start
+        // SportBukkit start
+        /* // CraftBukkit start
         isTickingEffects = false;
         for (Object e : effectsToProcess) {
             if (e instanceof MobEffect) {
@@ -496,7 +517,8 @@ public abstract class EntityLiving extends Entity {
                 removeEffect((Integer) e);
             }
         }
-        // CraftBukkit end
+        // CraftBukkit end */
+        // SportBukkit end
 
         if (this.updateEffects) {
             if (!this.world.isClientSide) {
@@ -553,15 +575,14 @@ public abstract class EntityLiving extends Entity {
     }
 
     public void removeAllEffects() {
-        Iterator iterator = this.effects.keySet().iterator();
+        Iterator iterator = com.google.common.collect.ImmutableSet.copyOf(this.effects.keySet()).iterator(); // SportBukkit - copy to allow concurrent modification
 
         while (iterator.hasNext()) {
             Integer integer = (Integer) iterator.next();
             MobEffect mobeffect = (MobEffect) this.effects.get(integer);
 
             if (!this.world.isClientSide) {
-                iterator.remove();
-                this.b(mobeffect);
+                this.removeEffect(integer);
             }
         }
 
@@ -586,17 +607,32 @@ public abstract class EntityLiving extends Entity {
 
     public void addEffect(MobEffect mobeffect) {
         org.spigotmc.AsyncCatcher.catchOp( "effect add"); // Spigot
-        // CraftBukkit start
+        // SportBukkit start
+        /* // CraftBukkit start
         if (isTickingEffects) {
             effectsToProcess.add(mobeffect);
             return;
         }
-        // CraftBukkit end
+        // CraftBukkit end */
+        // SportBukkit end
         if (this.d(mobeffect)) {
             if (this.effects.containsKey(Integer.valueOf(mobeffect.getEffectId()))) {
+                // SportBukkit start - fire event
+                PotionEffectExtendEvent event = new PotionEffectExtendEvent((LivingEntity) this.getBukkitEntity(),
+                        CraftPotionUtils.toBukkit(mobeffect),
+                        CraftPotionUtils.toBukkit(this.effects.get(mobeffect.getEffectId())));
+                this.world.getServer().getPluginManager().callEvent(event);
+                if(event.isCancelled()) return;
+                // SportBukkit end
                 ((MobEffect) this.effects.get(Integer.valueOf(mobeffect.getEffectId()))).a(mobeffect);
                 this.a((MobEffect) this.effects.get(Integer.valueOf(mobeffect.getEffectId())), true);
             } else {
+                // SportBukkit start - fire event
+                PotionEffectAddEvent event = new PotionEffectAddEvent((LivingEntity) this.getBukkitEntity(),
+                        CraftPotionUtils.toBukkit(mobeffect));
+                this.world.getServer().getPluginManager().callEvent(event);
+                if(event.isCancelled()) return;
+                // SportBukkit end
                 this.effects.put(Integer.valueOf(mobeffect.getEffectId()), mobeffect);
                 this.a(mobeffect);
             }
@@ -621,15 +657,26 @@ public abstract class EntityLiving extends Entity {
     }
 
     public void removeEffect(int i) {
-        // CraftBukkit start
+        // SportBukkit start
+        /* // CraftBukkit start
         if (isTickingEffects) {
             effectsToProcess.add(i);
             return;
         }
-        // CraftBukkit end
+        // CraftBukkit end */
+        // SportBukkit end
         MobEffect mobeffect = (MobEffect) this.effects.remove(Integer.valueOf(i));
 
         if (mobeffect != null) {
+            // SportBukkit start
+            PotionEffectRemoveEvent event = new PotionEffectRemoveEvent((LivingEntity) this.getBukkitEntity(),
+                    CraftPotionUtils.toBukkit(mobeffect));
+            this.world.getServer().getPluginManager().callEvent(event);
+            if(event.isCancelled()) {
+                this.effects.put(i, mobeffect);
+                return;
+            }
+            // SportBukkit end
             this.b(mobeffect);
         }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/potion/CraftPotionUtils.java b/src/main/java/org/bukkit/craftbukkit/potion/CraftPotionUtils.java
new file mode 100644
index 000000000..0303c265a
--- /dev/null
+++ b/src/main/java/org/bukkit/craftbukkit/potion/CraftPotionUtils.java
@@ -0,0 +1,34 @@
+
+package org.bukkit.craftbukkit.potion;
+
+import net.minecraft.server.MobEffect;
+import org.bukkit.potion.PotionEffect;
+import org.bukkit.potion.PotionEffectType;
+
+public class CraftPotionUtils {
+    private CraftPotionUtils() {}
+
+    public static PotionEffect toBukkit(MobEffect effect) {
+        return new PotionEffect(PotionEffectType.getById(effect.getEffectId()),
+                effect.getDuration(),
+                effect.getAmplifier(),
+                effect.isAmbient(),
+                effect.isShowParticles());
+    }
+
+    public static MobEffect toNMS(PotionEffect effect) {
+        return new MobEffect(effect.getType().getId(),
+                effect.getDuration(),
+                effect.getAmplifier(),
+                effect.isAmbient(),
+                effect.hasParticles());
+    }
+
+    public static MobEffect cloneWithDuration(MobEffect effect, int duration) {
+        return new MobEffect(effect.getEffectId(), duration, effect.getAmplifier(), effect.isAmbient(), effect.isShowParticles());
+    }
+
+    public static void extendDuration(MobEffect effect, int duration) {
+        effect.a(cloneWithDuration(effect, duration));
+    }
+}
-- 
2.36.0.windows.1

