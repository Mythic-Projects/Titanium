From afe5283201a69521121564b03f3d3b7c76f7bcb3 Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Mon, 19 Dec 2016 23:07:42 -0500
Subject: [PATCH] Implement [Paper-0186] Prevent Pathfinding out of World
 Border by Aikar


diff --git a/src/main/java/net/minecraft/server/NavigationAbstract.java b/src/main/java/net/minecraft/server/NavigationAbstract.java
index 1ec5cedab..9c76587dc 100644
--- a/src/main/java/net/minecraft/server/NavigationAbstract.java
+++ b/src/main/java/net/minecraft/server/NavigationAbstract.java
@@ -38,6 +38,7 @@ public abstract class NavigationAbstract {
     // WindSpigot start - reduce usage of blockposition
     public ChunkCache createChunkCache(boolean forEntitySearch) {
         if (this.b()) {
+            if (!getEntity().getWorld().getWorldBorder().isInBoundsCords(MathHelper.floor(b.locX), MathHelper.floor(b.locZ))) return null; // Paper - don't path out of world border
             float f = this.i();
             //BlockPosition blockposition1 = new BlockPosition(this.b);
             int i = (int) (f + (forEntitySearch ? 16.0F : 8.0F));
@@ -85,6 +86,7 @@ public abstract class NavigationAbstract {
     }
 
     public PathEntity a(BlockPosition blockposition) {
+        if (!getEntity().getWorld().getWorldBorder().isInBounds(blockposition)) return null; // Paper - don't path out of world border
         if (!this.b()) {
             return null;
         } else {
diff --git a/src/main/java/net/minecraft/server/WorldBorder.java b/src/main/java/net/minecraft/server/WorldBorder.java
index 7ea40468e..aee2e095f 100644
--- a/src/main/java/net/minecraft/server/WorldBorder.java
+++ b/src/main/java/net/minecraft/server/WorldBorder.java
@@ -29,10 +29,17 @@ public class WorldBorder {
         this.l = 5;
     }
 
+    public boolean isInBounds(BlockPosition blockposition) { return this.a(blockposition); } // Paper - OBFHELPER
     public boolean a(BlockPosition blockposition) {
-        return (double) (blockposition.getX() + 1) > this.b() && (double) blockposition.getX() < this.d() && (double) (blockposition.getZ() + 1) > this.c() && (double) blockposition.getZ() < this.e();
+        return this.isInBoundsCords(blockposition.getX(), blockposition.getZ()); // Titanium
     }
 
+    // Titanium start
+    public boolean isInBoundsCords(int x, int z) {
+        return (double) (x + 1) > this.b() && (double) x < this.d() && (double) (z + 1) > this.c() && (double) z < this.e();
+    }
+    // Titanium end
+
     // CraftBukkit start - split method
     public boolean isInBounds(ChunkCoordIntPair chunkcoordintpair) {
         return isInBounds(chunkcoordintpair.x, chunkcoordintpair.z);
-- 
2.36.0.windows.1

