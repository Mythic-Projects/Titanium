From d026a2ab61d827f9ae3a6cc5464287ca34466762 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Mon, 25 Jul 2022 21:42:15 +0200
Subject: [PATCH] Remove previously left mojang profiler


diff --git a/src/main/java/net/minecraft/server/CommandDispatcher.java b/src/main/java/net/minecraft/server/CommandDispatcher.java
index c1b6e3cd0..6558679ef 100644
--- a/src/main/java/net/minecraft/server/CommandDispatcher.java
+++ b/src/main/java/net/minecraft/server/CommandDispatcher.java
@@ -24,7 +24,7 @@ public class CommandDispatcher extends CommandHandler implements ICommandDispatc
         this.a((ICommand) (new CommandMe()));
         this.a((ICommand) (new CommandSeed()));
         this.a((ICommand) (new CommandHelp()));
-        this.a((ICommand) (new CommandDebug()));
+        //this.a((ICommand) (new CommandDebug())); // Purpur
         this.a((ICommand) (new CommandTell()));
         this.a((ICommand) (new CommandSay()));
         this.a((ICommand) (new CommandSpawnpoint()));
diff --git a/src/main/java/net/minecraft/server/EntityInsentient.java b/src/main/java/net/minecraft/server/EntityInsentient.java
index 027f700ec..920790d12 100644
--- a/src/main/java/net/minecraft/server/EntityInsentient.java
+++ b/src/main/java/net/minecraft/server/EntityInsentient.java
@@ -148,13 +148,13 @@ public abstract class EntityInsentient extends EntityLiving {
 
     public void K() {
         super.K();
-        this.world.methodProfiler.a("mobBaseTick");
+        //this.world.methodProfiler.a("mobBaseTick"); // Purpur
         if (this.isAlive() && this.random.nextInt(1000) < this.a_++) {
             this.a_ = -this.w();
             this.x();
         }
 
-        this.world.methodProfiler.b();
+        //this.world.methodProfiler.b(); // Purpur
     }
 
     protected int getExpValue(EntityHuman entityhuman) {
@@ -337,7 +337,7 @@ public abstract class EntityInsentient extends EntityLiving {
 
     public void m() {
         super.m();
-        this.world.methodProfiler.a("looting");
+        //this.world.methodProfiler.a("looting"); // Purpur
         if (!this.world.isClientSide && this.bY() && !this.aP && this.world.getGameRules().getBoolean("mobGriefing")) {
             List list = this.world.a(EntityItem.class, this.getBoundingBox().grow(1.0D, 0.0D, 1.0D));
             Iterator iterator = list.iterator();
@@ -351,7 +351,7 @@ public abstract class EntityInsentient extends EntityLiving {
             }
         }
 
-        this.world.methodProfiler.b();
+        //this.world.methodProfiler.b(); // Purpur
     }
 
     protected void a(EntityItem entityitem) {
@@ -455,9 +455,9 @@ public abstract class EntityInsentient extends EntityLiving {
 
     protected final void doTick() {
         ++this.ticksFarFromPlayer;
-        this.world.methodProfiler.a("checkDespawn");
+        //this.world.methodProfiler.a("checkDespawn"); // Purpur
         this.D();
-        this.world.methodProfiler.b();
+        //this.world.methodProfiler.b(); // Purpur
         // Spigot Start
         if ( this.fromMobSpawner )
         {
@@ -470,30 +470,30 @@ public abstract class EntityInsentient extends EntityLiving {
             return;
         }
         // Spigot End
-        this.world.methodProfiler.a("sensing");
+        //this.world.methodProfiler.a("sensing"); // Purpur
         this.bk.a();
-        this.world.methodProfiler.b();
-        this.world.methodProfiler.a("targetSelector");
+        //this.world.methodProfiler.b(); // Purpur
+        //this.world.methodProfiler.a("targetSelector"); // Purpur
         this.targetSelector.a();
-        this.world.methodProfiler.b();
-        this.world.methodProfiler.a("goalSelector");
+        //this.world.methodProfiler.b(); // Purpur
+        //this.world.methodProfiler.a("goalSelector"); // Purpur
         this.goalSelector.a();
-        this.world.methodProfiler.b();
-        this.world.methodProfiler.a("navigation");
+        //this.world.methodProfiler.b(); // Purpur
+        //this.world.methodProfiler.a("navigation"); // Purpur
         this.navigation.k();
-        this.world.methodProfiler.b();
-        this.world.methodProfiler.a("mob tick");
+        //this.world.methodProfiler.b(); // Purpur
+        //this.world.methodProfiler.a("mob tick"); // Purpur
         this.E();
-        this.world.methodProfiler.b();
-        this.world.methodProfiler.a("controls");
-        this.world.methodProfiler.a("move");
+        //this.world.methodProfiler.b(); // Purpur
+        //this.world.methodProfiler.a("controls"); // Purpur
+        //this.world.methodProfiler.a("move"); // Purpur
         this.moveController.c();
-        this.world.methodProfiler.c("look");
+        //this.world.methodProfiler.c("look"); // Purpur
         this.lookController.a();
-        this.world.methodProfiler.c("jump");
+        //this.world.methodProfiler.c("jump"); // Purpur
         this.g.b();
-        this.world.methodProfiler.b();
-        this.world.methodProfiler.b();
+        //this.world.methodProfiler.b(); // Purpur
+        //this.world.methodProfiler.b(); // Purpur
     }
 
     protected void E() {}
diff --git a/src/main/java/net/minecraft/server/EntitySenses.java b/src/main/java/net/minecraft/server/EntitySenses.java
index 141a1ef8d..a2bfb5b50 100644
--- a/src/main/java/net/minecraft/server/EntitySenses.java
+++ b/src/main/java/net/minecraft/server/EntitySenses.java
@@ -24,10 +24,10 @@ public class EntitySenses {
         } else if (this.c.contains(entity)) {
             return false;
         } else {
-            this.a.world.methodProfiler.a("canSee");
+            //this.a.world.methodProfiler.a("canSee"); // Purpur
             boolean flag = this.a.hasLineOfSight(entity);
 
-            this.a.world.methodProfiler.b();
+            //this.a.world.methodProfiler.b(); // Purpur
             if (flag) {
                 this.b.add(entity);
             } else {
diff --git a/src/main/java/net/minecraft/server/NavigationAbstract.java b/src/main/java/net/minecraft/server/NavigationAbstract.java
index 8ebe58495..ea6104338 100644
--- a/src/main/java/net/minecraft/server/NavigationAbstract.java
+++ b/src/main/java/net/minecraft/server/NavigationAbstract.java
@@ -43,13 +43,13 @@ public abstract class NavigationAbstract {
         } else {
             float f = this.i();
 
-            this.c.methodProfiler.a("pathfind");
+            //this.c.methodProfiler.a("pathfind"); // Purpur
             BlockPosition blockposition1 = new BlockPosition(this.b);
             int i = (int) (f + 8.0F);
             ChunkCache chunkcache = new ChunkCache(this.c, blockposition1.a(-i, -i, -i), blockposition1.a(i, i, i), 0);
             PathEntity pathentity = this.j.a((IBlockAccess) chunkcache, (Entity) this.b, blockposition, f);
 
-            this.c.methodProfiler.b();
+            //this.c.methodProfiler.b(); // Purpur
             return pathentity;
         }
     }
@@ -70,13 +70,13 @@ public abstract class NavigationAbstract {
         } else {
             float f = this.i();
 
-            this.c.methodProfiler.a("pathfind");
+            //this.c.methodProfiler.a("pathfind"); // Purpur
             BlockPosition blockposition = (new BlockPosition(this.b)).up();
             int i = (int) (f + 16.0F);
             ChunkCache chunkcache = new ChunkCache(this.c, blockposition.a(-i, -i, -i), blockposition.a(i, i, i), 0);
             PathEntity pathentity = this.j.a((IBlockAccess) chunkcache, (Entity) this.b, entity, f);
 
-            this.c.methodProfiler.b();
+            //this.c.methodProfiler.b(); // Purpur
             return pathentity;
         }
     }
-- 
2.36.0.windows.1

