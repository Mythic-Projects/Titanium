From 4517333a9ebb6b8ca80c7e1eb7c06698e079a687 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Mon, 24 Oct 2022 00:51:03 +0200
Subject: [PATCH] Add Horizontal Min/Max & WTap Extra Horizontal/Vertical to
 KnockbackProfile


diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index 27b977824..f91a50c54 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -1019,9 +1019,13 @@ public abstract class EntityHuman extends EntityLiving {
                     if (flag2) {
                         if (i > 0) {
                             // Titanium start - knockback profiles
-                            KnockbackProfile kb = (this.getKnockbackProfile() == null) ? world.getServer().titanium().getKnockbackProfile(): this.getKnockbackProfile();
+                            KnockbackProfile kb = (this.getKnockbackProfile() == null) ? world.getServer().titanium().getKnockbackProfile() : this.getKnockbackProfile();
 
-                            entity.g(-MathHelper.sin((float) (this.yaw * Math.PI / 180.0F)) * (float) i * kb.getExtraHorizontal(), kb.getExtraVertical(), MathHelper.cos((float) (this.yaw * Math.PI / 180.0F)) * (float) i * kb.getExtraHorizontal());
+                            if (this.isExtraKnockback()) {
+                                entity.g(-MathHelper.sin((float) (this.yaw * Math.PI / 180.0F)) * (float) i * kb.getWTapExtraHorizontal(), kb.getWTapExtraVertical(), MathHelper.cos((float) (this.yaw * Math.PI / 180.0F)) * (float) i * kb.getWTapExtraHorizontal());
+                            } else {
+                                entity.g(-MathHelper.sin((float) (this.yaw * Math.PI / 180.0F)) * (float) i * kb.getExtraHorizontal(), kb.getExtraVertical(), MathHelper.cos((float) (this.yaw * Math.PI / 180.0F)) * (float) i * kb.getExtraHorizontal());
+                            }
                             this.motX *= 0.6D;
                             this.motZ *= 0.6D;
                             //this.setSprinting(false);
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 237e97526..053f720da 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -956,7 +956,6 @@ public abstract class EntityLiving extends Entity {
                 vertical = kb.getVertical();
             }
 
-            //
             this.motX *= kb.getFrictionHorizontal();
             this.motY *= kb.getFrictionVertical();
             this.motZ *= kb.getFrictionHorizontal();
@@ -964,11 +963,18 @@ public abstract class EntityLiving extends Entity {
             this.motX -= x / magnitude * horizontal;
             this.motY += vertical;
             this.motZ -= z / magnitude * horizontal;
+
+            if (this.motX > kb.getHorizontalMax()) this.motX = kb.getHorizontalMax();
+            if (this.motX < kb.getHorizontalMin()) this.motX = kb.getHorizontalMin();
+
+            if (this.motZ > kb.getHorizontalMax()) this.motZ = kb.getHorizontalMax();
+            if (this.motZ < kb.getHorizontalMin()) this.motZ = kb.getHorizontalMin();
+
             if (this.motY > kb.getVerticalMax()) this.motY = kb.getVerticalMax();
             if (this.motY < kb.getVerticalMin()) this.motY = kb.getVerticalMin();
         }
     }
-    // Nacho end
+    // Titanium end
 
     protected String bo() {
         return "game.neutral.hurt";
diff --git a/src/main/java/net/titanium/config/knockback/KnockbackConfig.java b/src/main/java/net/titanium/config/knockback/KnockbackConfig.java
index 6ab2c9d04..c233c4bd2 100644
--- a/src/main/java/net/titanium/config/knockback/KnockbackConfig.java
+++ b/src/main/java/net/titanium/config/knockback/KnockbackConfig.java
@@ -81,14 +81,19 @@ public class KnockbackConfig {
     public void loadProfile(KnockbackProfile profile) {
         String path = "profiles." + profile.getName();
 
-        profile.setFrictionHorizontal(getDouble(path + ".friction-horizontal", 0.5D));
-        profile.setFrictionVertical(getDouble(path + ".friction-vertical", 0.5D));
         profile.setHorizontal(getDouble(path + ".horizontal", 0.4D));
+        profile.setHorizontalMax(getDouble(path + ".horizontal-max", 0.4D));
+        profile.setHorizontalMin(getDouble(path + ".horizontal-min", -0.4D));
         profile.setVertical(getDouble(path + ".vertical", 0.4D));
         profile.setVerticalMax(getDouble(path + ".vertical-max", 0.4D));
         profile.setVerticalMin(getDouble(path + ".vertical-min", -1.0D));
         profile.setExtraHorizontal(getDouble(path + ".extra-horizontal", 0.5D));
         profile.setExtraVertical(getDouble(path + ".extra-vertical", 0.05D));
+        profile.setFrictionHorizontal(getDouble(path + ".friction-horizontal", 0.5D));
+        profile.setFrictionVertical(getDouble(path + ".friction-vertical", 0.5D));
+
+        profile.setWTapExtraHorizontal(getDouble(path + ".w-tap-extra-horizontal", 0.5D));
+        profile.setWTapExtraVertical(getDouble(path + ".w-tap-extra-vertical", 0.05D));
 
         profile.setStopSprint(getBoolean(path + ".stop-sprint", true));
 
@@ -110,6 +115,8 @@ public class KnockbackConfig {
         String path = "profiles." + profile.getName();
 
         config.set(path + ".horizontal", profile.getHorizontal());
+        config.set(path + ".horizontal-max", profile.getHorizontalMax());
+        config.set(path + ".horizontal-min", profile.getHorizontalMin());
         config.set(path + ".vertical", profile.getVertical());
         config.set(path + ".vertical-min", profile.getVerticalMin());
         config.set(path + ".vertical-max", profile.getVerticalMax());
@@ -118,6 +125,9 @@ public class KnockbackConfig {
         config.set(path + ".friction-horizontal", profile.getFrictionHorizontal());
         config.set(path + ".friction-vertical", profile.getFrictionVertical());
 
+        config.set(path + ".wtap-extra-horizontal", profile.getWTapExtraHorizontal());
+        config.set(path + ".wtap-extra-vertical", profile.getWTapExtraVertical());
+
         config.set(path + ".stop-sprint", profile.isStopSprint());
 
         if (saveProjectiles) {
diff --git a/src/main/java/net/titanium/knockback/TitaniumKnockbackProfile.java b/src/main/java/net/titanium/knockback/TitaniumKnockbackProfile.java
index 9261d082a..5bf4fb017 100644
--- a/src/main/java/net/titanium/knockback/TitaniumKnockbackProfile.java
+++ b/src/main/java/net/titanium/knockback/TitaniumKnockbackProfile.java
@@ -13,14 +13,22 @@ public class TitaniumKnockbackProfile implements KnockbackProfile, Cloneable {
     private String name;
 
     public double horizontal = 0.4D;
+    public double horizontalMin = -0.4D;
+    public double horizontalMax = 0.4D;
+
     public double vertical = 0.4D;
     public double verticalMin = -1.0D;
     public double verticalMax = 0.4D;
+
     public double extraHorizontal = 0.5D;
     public double extraVertical = 0.1D;
+
     public double frictionHorizontal = 0.5D;
     public double frictionVertical = 0.5D;
 
+    private double wTapHorizontal = 0.4D;
+    private double wTapVertical = 0.4D;
+
     public boolean stopSprint = true;
 
     public final Projectiles projectiles = new Projectiles();
@@ -98,6 +106,26 @@ public class TitaniumKnockbackProfile implements KnockbackProfile, Cloneable {
         this.horizontal = horizontal;
     }
 
+    @Override
+    public double getHorizontalMin() {
+        return this.horizontalMin;
+    }
+
+    @Override
+    public void setHorizontalMin(double horizontalMin) {
+        this.horizontalMin = horizontalMin;
+    }
+
+    @Override
+    public double getHorizontalMax() {
+        return this.horizontalMax;
+    }
+
+    @Override
+    public void setHorizontalMax(double horizontalMax) {
+        this.horizontalMax = horizontalMax;
+    }
+
     @Override
     public double getVertical() {
         return this.vertical;
@@ -168,6 +196,26 @@ public class TitaniumKnockbackProfile implements KnockbackProfile, Cloneable {
         this.frictionVertical = frictionVertical;
     }
 
+    @Override
+    public double getWTapExtraHorizontal() {
+        return this.wTapHorizontal;
+    }
+
+    @Override
+    public void setWTapExtraHorizontal(double wTapHorizontal) {
+        this.wTapHorizontal = wTapHorizontal;
+    }
+
+    @Override
+    public double getWTapExtraVertical() {
+        return this.wTapVertical;
+    }
+
+    @Override
+    public void setWTapExtraVertical(double wTapVertical) {
+        this.wTapVertical = wTapVertical;
+    }
+
     @Override
     public boolean isStopSprint() {
         return this.stopSprint;
@@ -179,7 +227,7 @@ public class TitaniumKnockbackProfile implements KnockbackProfile, Cloneable {
     }
 
     private Projectiles getProjectiles() {
-        return projectiles;
+        return this.projectiles;
     }
 
     @Override
@@ -290,6 +338,8 @@ public class TitaniumKnockbackProfile implements KnockbackProfile, Cloneable {
     public String[] getKnockbackValues() {
         return new String[] {
                 "Horizontal" + ChatColor.GRAY + ":  " + this.getHorizontal(),
+                "Horizontal-Max" + ChatColor.GRAY + ":  " + this.getHorizontalMax(),
+                "Horizontal-Min" + ChatColor.GRAY + ":  " + this.getHorizontalMin(),
                 "Vertical" + ChatColor.GRAY + ":  " + this.getVertical(),
                 "Vertical-Max" + ChatColor.GRAY + ":  " + this.getVerticalMax(),
                 "Vertical-Min" + ChatColor.GRAY + ":  " + this.getVerticalMin(),
@@ -297,6 +347,8 @@ public class TitaniumKnockbackProfile implements KnockbackProfile, Cloneable {
                 "Extra-Vertical" + ChatColor.GRAY + ":  " + this.getExtraVertical(),
                 "Friction-Horizontal" + ChatColor.GRAY + ":  " + this. getFrictionHorizontal(),
                 "Friction-Vertical" + ChatColor.GRAY + ":  " + this.getFrictionVertical(),
+                "WTap-Extra-Horizontal" + ChatColor.GRAY + ":  " + this.getWTapExtraHorizontal(),
+                "WTap-Extra-Vertical" + ChatColor.GRAY + ":  " + this.getWTapExtraVertical(),
                 "Stop-Sprint" + ChatColor.GRAY + ":  " + this.isStopSprint()
         };
     }
@@ -327,6 +379,8 @@ public class TitaniumKnockbackProfile implements KnockbackProfile, Cloneable {
         TitaniumKnockbackProfile profile = new TitaniumKnockbackProfile(this.getName());
 
         profile.setHorizontal(this.getHorizontal());
+        profile.setHorizontalMax(this.getHorizontalMax());
+        profile.setHorizontalMin(this.getHorizontalMin());
         profile.setVertical(this.getVertical());
         profile.setVerticalMax(this.getVerticalMax());
         profile.setVerticalMin(this.getVerticalMin());
@@ -335,6 +389,9 @@ public class TitaniumKnockbackProfile implements KnockbackProfile, Cloneable {
         profile.setFrictionHorizontal(this.getFrictionHorizontal());
         profile.setFrictionVertical(this.getFrictionVertical());
 
+        profile.setWTapExtraHorizontal(this.getWTapExtraHorizontal());
+        profile.setWTapExtraVertical(this.getWTapExtraVertical());
+
         profile.setStopSprint(this.isStopSprint());
 
         profile.setRodHorizontal(this.getRodHorizontal());
@@ -348,7 +405,6 @@ public class TitaniumKnockbackProfile implements KnockbackProfile, Cloneable {
         profile.setEggHorizontal(this.getEggHorizontal());
         profile.setEggVertical(this.getEggVertical());
 
-
         return profile;
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
index 20592681e..cb0a5b90f 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftLivingEntity.java
@@ -66,7 +66,6 @@ import org.bukkit.util.Vector;
 
 public class CraftLivingEntity extends CraftEntity implements LivingEntity {
     private CraftEntityEquipment equipment;
-    private KnockbackProfile knockbackProfile;
 
     public CraftLivingEntity(final CraftServer server, final EntityLiving entity) {
         super(server, entity);
-- 
2.36.0.windows.1

