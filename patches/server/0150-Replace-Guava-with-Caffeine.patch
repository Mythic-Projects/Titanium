From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Wed, 14 Sep 2022 21:23:44 +0200
Subject: [PATCH] Replace Guava with Caffeine


diff --git a/build.gradle b/build.gradle
index 0a21a6c06b02bf67514a685f3a329ddf244ab343..cfc172e4cdd27631f2f57f5f6803aa66fd6278c8 100644
--- a/build.gradle
+++ b/build.gradle
@@ -33,6 +33,7 @@ dependencies {
     implementation 'com.velocitypowered:velocity-native:1.1.9' // Nacho - Use Velocity natives & compression
     implementation 'com.eatthepath:fast-uuid:0.2.0' // Nacho - Use jchambers' FAST UUID methods
     implementation 'com.github.matejtymes:javafixes:1.3.7.1' // WindSpigot
+    implementation 'com.github.ben-manes.caffeine:caffeine:2.9.3' // Titanium - use caffeine instead of guava cache
     // Titanium libraries end
 
     testImplementation 'junit:junit:4.13.2' // Titanium - Updated junit to 4.13.2
diff --git a/src/main/java/net/minecraft/server/TileEntitySkull.java b/src/main/java/net/minecraft/server/TileEntitySkull.java
index 58014c5f142abf72fcf6a7164872bbe7d7bb9d18..9e0e4fdfaed384cafa9faba5b93c218870a36229 100644
--- a/src/main/java/net/minecraft/server/TileEntitySkull.java
+++ b/src/main/java/net/minecraft/server/TileEntitySkull.java
@@ -1,5 +1,8 @@
 package net.minecraft.server;
 
+import com.github.benmanes.caffeine.cache.CacheLoader;
+import com.github.benmanes.caffeine.cache.Caffeine;
+import com.github.benmanes.caffeine.cache.LoadingCache;
 import com.google.common.collect.Iterables;
 import com.mojang.authlib.GameProfile;
 import com.mojang.authlib.properties.Property;
@@ -7,9 +10,6 @@ import java.util.UUID;
 
 // Spigot start
 import com.google.common.base.Predicate;
-import com.google.common.cache.LoadingCache;
-import com.google.common.cache.CacheBuilder;
-import com.google.common.cache.CacheLoader;
 import java.util.concurrent.Executor;
 import java.util.concurrent.Executors;
 import java.util.concurrent.TimeUnit;
@@ -30,7 +30,7 @@ public class TileEntitySkull extends TileEntity {
                     .setNameFormat("Head Conversion Thread - %1$d")
                     .build()
     );
-    public static final LoadingCache<String, GameProfile> skinCache = CacheBuilder.newBuilder()
+    public static final LoadingCache<String, GameProfile> skinCache = Caffeine.newBuilder() // Titanium - replace guava cache with caffeine
             .maximumSize( 5000 )
             .expireAfterAccess( 60, TimeUnit.MINUTES )
             .build( new CacheLoader<String, GameProfile>()
@@ -169,7 +169,7 @@ public class TileEntitySkull extends TileEntity {
                     executor.execute(new Runnable() {
                         @Override
                         public void run() {
-                            final GameProfile profile = skinCache.getUnchecked(gameprofile.getName().toLowerCase());                            
+                            final GameProfile profile = skinCache.get(gameprofile.getName().toLowerCase()); // Titanium - replace Guava cache with Caffeine
                             MinecraftServer.getServer().processQueue.add(new Runnable() {
                                 @Override
                                 public void run() {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index e3e75e28bf10dedbded8484ad7faf0976d020056..88462b469ea1b0ac0ac4362547c180c64dff98f2 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -161,7 +161,7 @@ public final class CraftServer implements Server {
     //private YamlConfiguration configuration; // Titanium
     //private YamlConfiguration commandsConfiguration; // Titanium
     private final Yaml yaml = new Yaml(new SafeConstructor());
-    private final Map<UUID, OfflinePlayer> offlinePlayers = new MapMaker().weakValues().makeMap();
+    private final com.github.benmanes.caffeine.cache.Cache<UUID, OfflinePlayer> offlinePlayers = com.github.benmanes.caffeine.cache.Caffeine.newBuilder().weakValues().build(); // Titanium - replace Map with Caffeine
     private final EntityMetadataStore entityMetadata = new EntityMetadataStore();
     private final PlayerMetadataStore playerMetadata = new PlayerMetadataStore();
     private final WorldMetadataStore worldMetadata = new WorldMetadataStore();
@@ -1523,7 +1523,7 @@ public final class CraftServer implements Server {
                 result = getOfflinePlayer(profile);
             }
         } else {
-            offlinePlayers.remove(result.getUniqueId());
+            offlinePlayers.invalidate(result.getUniqueId()); // Titanium - use caffeine
         }
 
         return result;
@@ -1535,13 +1535,13 @@ public final class CraftServer implements Server {
 
         OfflinePlayer result = getPlayer(id);
         if (result == null) {
-            result = offlinePlayers.get(id);
+            result = offlinePlayers.getIfPresent(id); // Titanium - use caffeine
             if (result == null) {
                 result = new CraftOfflinePlayer(this, new GameProfile(id, null));
                 offlinePlayers.put(id, result);
             }
         } else {
-            offlinePlayers.remove(id);
+            offlinePlayers.invalidate(id); // Titanium - use caffeine
         }
 
         return result;
