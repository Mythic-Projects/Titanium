From 3e68caaeb09045afacf44b9a5ca4ebd75e7f5772 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Sat, 11 Jun 2022 00:25:00 +0200
Subject: [PATCH] More usage of fastutil - PlayerChunkMap & World


diff --git a/src/main/java/net/minecraft/server/PlayerChunkMap.java b/src/main/java/net/minecraft/server/PlayerChunkMap.java
index 38586aad7..7aa2b129d 100644
--- a/src/main/java/net/minecraft/server/PlayerChunkMap.java
+++ b/src/main/java/net/minecraft/server/PlayerChunkMap.java
@@ -1,9 +1,12 @@
 package net.minecraft.server;
 
 import com.google.common.collect.Lists;
+import it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap;
+import it.unimi.dsi.fastutil.objects.ObjectArrayList;
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
+import java.util.Map;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
@@ -19,7 +22,7 @@ public class PlayerChunkMap {
 
     private static final Logger a = LogManager.getLogger();
     private final WorldServer world;
-    private final List<EntityPlayer> managedPlayers = Lists.newArrayList();
+    private final List<EntityPlayer> managedPlayers = new ObjectArrayList<>(); // Titanium - ArrayList -> ObjectArrayList
     private final LongHashMap<PlayerChunkMap.PlayerChunk> d = new LongHashMap();
     private final Queue<PlayerChunkMap.PlayerChunk> e = new java.util.concurrent.ConcurrentLinkedQueue<PlayerChunkMap.PlayerChunk>(); // CraftBukkit ArrayList -> ConcurrentLinkedQueue
     private final Queue<PlayerChunkMap.PlayerChunk> f = new java.util.concurrent.ConcurrentLinkedQueue<PlayerChunkMap.PlayerChunk>(); // CraftBukkit ArrayList -> ConcurrentLinkedQueue
@@ -351,7 +354,7 @@ public class PlayerChunkMap {
 
     class PlayerChunk {
 
-        private final List<EntityPlayer> b = Lists.newArrayList();
+        private final List<EntityPlayer> b = new ObjectArrayList<>(); // Titanium - ArrayList -> ObjectArrayList
         private final ChunkCoordIntPair location;
         private short[] dirtyBlocks = new short[64];
         private int dirtyCount;
@@ -359,13 +362,9 @@ public class PlayerChunkMap {
         private long g;
 
         // CraftBukkit start - add fields
-        private final HashMap<EntityPlayer, Runnable> players = new HashMap<EntityPlayer, Runnable>();
+        private final Map<EntityPlayer, Runnable> players = new Object2ObjectOpenHashMap<>();
         private boolean loaded = false;
-        private Runnable loadedRunnable = new Runnable() {
-            public void run() {
-                PlayerChunk.this.loaded = true;
-            }
-        };
+        private Runnable loadedRunnable = () -> PlayerChunk.this.loaded = true;
         // CraftBukkit end
 
         public PlayerChunk(int i, int j) {
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index 5399f2cd4..5ff69e199 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -54,7 +54,7 @@ public abstract class PlayerList {
     private static final SimpleDateFormat g = new SimpleDateFormat("yyyy-MM-dd \'at\' HH:mm:ss z");
     private final MinecraftServer server;
     public final List<EntityPlayer> players = new java.util.concurrent.CopyOnWriteArrayList(); // CraftBukkit - ArrayList -> CopyOnWriteArrayList: Iterator safety
-    private final Map<UUID, EntityPlayer> j = new Object2ObjectOpenHashMap<>();
+    private final Map<UUID, EntityPlayer> j = new Object2ObjectOpenHashMap<>(); // Titanium - Use fastutil
     private final GameProfileBanList k;
     private final IpBanList l;
     private final OpList operators;
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 1e7baf9da..62011e03b 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -4,6 +4,7 @@ import com.google.common.base.Predicate;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
+import it.unimi.dsi.fastutil.objects.ObjectArrayList;
 import me.suicidalkids.ion.blocks.movement.MovementCache;
 import net.titanium.config.IonWorldConfig;
 import net.titanium.config.PaperWorldConfig;
@@ -43,7 +44,7 @@ public abstract class World implements IBlockAccess {
     private int a = 63;
     protected boolean e;
     // Spigot start - guard entity list from removals
-    public final List<Entity> entityList = new java.util.ArrayList<Entity>()
+    public final List<Entity> entityList = new ObjectArrayList<Entity>() // Titanium - ArrayList -> ObjectArrayList
     {
         @Override
         public Entity remove(int index)
@@ -73,8 +74,8 @@ public abstract class World implements IBlockAccess {
     public final List<TileEntity> tileEntityList = Lists.newArrayList();
     private final List<TileEntity> b = Lists.newArrayList();
     private final Set<TileEntity> c = Sets.newHashSet(); // Paper
-    public final List<EntityHuman> players = Lists.newArrayList();
-    public final List<Entity> k = Lists.newArrayList();
+    public final List<EntityHuman> players = new ObjectArrayList<>(); // Titanium - ArrayList -> ObjectArrayList
+    public final List<Entity> k = new ObjectArrayList<>(); // Titanium - ArrayList -> ObjectArrayList
     protected final IntHashMap<Entity> entitiesById = new IntHashMap();
     private long d = 16777215L;
     private int I; private int getSkylightSubtracted() { return this.I; } // Paper - OBFHELPER
-- 
2.36.0.windows.1

