From 8c86f2d18c88cd3564926e4603d989fdfaec099e Mon Sep 17 00:00:00 2001
From: BillyGalbreath <blake.galbreath@gmail.com>
Date: Sat, 16 Jul 2022 21:37:10 -0500
Subject: [PATCH] Implement [Purpur-0291] Remove Mojang Profiler by
 BillyGalbreath


diff --git a/src/main/java/net/minecraft/server/Chunk.java b/src/main/java/net/minecraft/server/Chunk.java
index 58d8c9d78..155c61f44 100644
--- a/src/main/java/net/minecraft/server/Chunk.java
+++ b/src/main/java/net/minecraft/server/Chunk.java
@@ -279,7 +279,7 @@ public class Chunk {
     }
 
     private void h(boolean flag) {
-        this.world.methodProfiler.a("recheckGaps");
+        //this.world.methodProfiler.a("recheckGaps"); // Purpur
         if (this.world.areChunksLoaded(new BlockPosition(this.locX * 16 + 8, 0, this.locZ * 16 + 8), 16)) {
             for (int i = 0; i < 16; ++i) {
                 for (int j = 0; j < 16; ++j) {
@@ -306,7 +306,7 @@ public class Chunk {
                         }
 
                         if (flag) {
-                            this.world.methodProfiler.b();
+                            //this.world.methodProfiler.b(); // Purpur
                             return;
                         }
                     }
@@ -316,7 +316,7 @@ public class Chunk {
             this.k = false;
         }
 
-        this.world.methodProfiler.b();
+        //this.world.methodProfiler.b(); // Purpur
     }
 
     private void c(int i, int j, int k) {
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 75e8a29c3..237e97526 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -173,7 +173,7 @@ public abstract class EntityLiving extends Entity {
     public void K() {
         this.ay = this.az;
         super.K();
-        this.world.methodProfiler.a("livingEntityBaseTick");
+        //this.world.methodProfiler.a("livingEntityBaseTick"); // Purpur
         boolean flag = this instanceof EntityHuman;
 
         if (this.isAlive()) {
@@ -266,7 +266,7 @@ public abstract class EntityLiving extends Entity {
         this.aL = this.aK;
         this.lastYaw = this.yaw;
         this.lastPitch = this.pitch;
-        this.world.methodProfiler.b();
+        //this.world.methodProfiler.b(); // Purpur
     }
 
     // CraftBukkit start
@@ -1586,10 +1586,10 @@ public abstract class EntityLiving extends Entity {
         }
 
         this.aS += (f3 - this.aS) * 0.3F;
-        this.world.methodProfiler.a("headTurn");
+        //this.world.methodProfiler.a("headTurn"); // Purpur
         f2 = this.h(f1, f2);
-        this.world.methodProfiler.b();
-        this.world.methodProfiler.a("rangeChecks");
+        //this.world.methodProfiler.b(); // Purpur
+        //this.world.methodProfiler.a("rangeChecks"); // Purpur
 
         while (this.yaw - this.lastYaw < -180.0F) {
             this.lastYaw -= 360.0F;
@@ -1623,7 +1623,7 @@ public abstract class EntityLiving extends Entity {
             this.aL += 360.0F;
         }
 
-        this.world.methodProfiler.b();
+        //this.world.methodProfiler.b(); // Purpur
         this.aT += f2;
     }
 
@@ -1688,20 +1688,20 @@ public abstract class EntityLiving extends Entity {
             this.motZ = 0.0D;
         }
 
-        this.world.methodProfiler.a("ai");
+        //this.world.methodProfiler.a("ai"); // Purpur
         if (this.bD()) {
             this.aY = false;
             this.aZ = 0.0F;
             this.ba = 0.0F;
             this.bb = 0.0F;
         } else if (this.bM()) {
-            this.world.methodProfiler.a("newAi");
+            //this.world.methodProfiler.a("newAi"); // Purpur
             this.doTick();
-            this.world.methodProfiler.b();
+            //this.world.methodProfiler.b(); // Purpur
         }
 
-        this.world.methodProfiler.b();
-        this.world.methodProfiler.a("jump");
+        //this.world.methodProfiler.b(); // Purpur
+        //this.world.methodProfiler.a("jump"); // Purpur
         if (this.aY) {
             if (this.V()) {
                 this.bG();
@@ -1715,19 +1715,19 @@ public abstract class EntityLiving extends Entity {
             this.bn = 0;
         }
 
-        this.world.methodProfiler.b();
-        this.world.methodProfiler.a("travel");
+        //this.world.methodProfiler.b(); // Purpur
+        //this.world.methodProfiler.a("travel"); // Purpur
         this.aZ *= 0.98F;
         this.ba *= 0.98F;
         this.bb *= 0.9F;
         this.g(this.aZ, this.ba);
-        this.world.methodProfiler.b();
-        this.world.methodProfiler.a("push");
+        //this.world.methodProfiler.b(); // Purpur
+        //this.world.methodProfiler.a("push"); // Purpur
         if (!this.world.isClientSide) {
             this.bL();
         }
 
-        this.world.methodProfiler.b();
+        //this.world.methodProfiler.b(); // Purpur
     }
 
     protected void doTick() {}
diff --git a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
index 0446e2be5..a3392c83d 100644
--- a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
+++ b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
@@ -207,7 +207,7 @@ public abstract class EntityMinecartAbstract extends Entity implements INamableT
         int i;
 
         if (!this.world.isClientSide && this.world instanceof WorldServer) {
-            this.world.methodProfiler.a("portal");
+            //this.world.methodProfiler.a("portal"); // Purpur
             MinecraftServer minecraftserver = ((WorldServer) this.world).getMinecraftServer();
 
             i = this.L();
@@ -243,7 +243,7 @@ public abstract class EntityMinecartAbstract extends Entity implements INamableT
                 --this.portalCooldown;
             }
 
-            this.world.methodProfiler.b();
+            //this.world.methodProfiler.b(); // Purpur
         }
 
         if (this.world.isClientSide) {
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 55b7e67be..5f655390e 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -128,7 +128,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     public void c() {
         this.h = false;
         ++this.e;
-        this.minecraftServer.methodProfiler.a("keepAlive");
+        //this.minecraftServer.methodProfiler.a("keepAlive"); // Purpur
         if ((long) this.e - this.k > 40L) {
             this.k = (long) this.e;
             this.j = this.d();
@@ -136,7 +136,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
             this.sendPacket(new PacketPlayOutKeepAlive(this.i));
         }
 
-        this.minecraftServer.methodProfiler.b();
+        //this.minecraftServer.methodProfiler.b(); // Purpur
         // CraftBukkit start
         for (int spam; (spam = this.chatThrottle) > 0 && !chatSpamField.compareAndSet(this, spam, spam - 1); ) ;
         /* Use thread-safe field access instead
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index c255ea470..b60791ebf 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -790,7 +790,7 @@ public abstract class PlayerList {
 
         // worldserver.methodProfiler.b();
         if (i != 1) {
-            worldserver.methodProfiler.a("placing");
+            //worldserver.methodProfiler.a("placing"); // Purpur
             d0 = (double) MathHelper.clamp((int) d0, -29999872, 29999872);
             d1 = (double) MathHelper.clamp((int) d1, -29999872, 29999872);
             /*
@@ -863,9 +863,9 @@ public abstract class PlayerList {
         }
         */
 
-        worldserver.methodProfiler.b();
+        //worldserver.methodProfiler.b(); // Purpur
         if (i != 1) {
-            worldserver.methodProfiler.a("placing");
+            //worldserver.methodProfiler.a("placing"); // Purpur
             /*
             d0 = (double) MathHelper.clamp((int) d0, -29999872, 29999872);
             d1 = (double) MathHelper.clamp((int) d1, -29999872, 29999872);
@@ -885,7 +885,7 @@ public abstract class PlayerList {
                 worldserver1.entityJoinedWorld(entity, false);
             }
 
-            worldserver.methodProfiler.b();
+            //worldserver.methodProfiler.b(); // Purpur
         }
 
         entity.spawnIn(worldserver1);
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 8e046c4c2..a20e213fb 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -453,9 +453,9 @@ public abstract class World implements IBlockAccess {
                 Block block1 = iblockdata1.getBlock();
 
                 if (block.p() != block1.p() || block.r() != block1.r()) {
-                    this.methodProfiler.a("checkLight");
+                    //this.methodProfiler.a("checkLight"); // Purpur
                     this.x(blockposition);
-                    this.methodProfiler.b();
+                    //this.methodProfiler.b(); // Purpur
                 }
 
                 /*
@@ -1465,8 +1465,8 @@ public abstract class World implements IBlockAccess {
     public void b(BlockPosition blockposition, Block block, int i, int j) {}
 
     public void tickEntities() {
-        this.methodProfiler.a("entities");
-        this.methodProfiler.a("global");
+        //this.methodProfiler.a("entities"); // Purpur
+        //this.methodProfiler.a("global"); // Purpur
 
         int i;
         Entity entity;
@@ -1501,9 +1501,9 @@ public abstract class World implements IBlockAccess {
             }
         }
 
-        this.methodProfiler.c("remove");
+        //this.methodProfiler.c("remove"); // Purpur
         //timings.entityRemoval.startTiming(); // Spigot // Purpur
-        this.entityList.removeAll(this.g);
+        //this.entityList.removeAll(this.g); // Purpur
 
         int j;
         int k;
@@ -1524,7 +1524,7 @@ public abstract class World implements IBlockAccess {
 
         this.g.clear();
         //timings.entityRemoval.stopTiming(); // Spigot // Purpur
-        this.methodProfiler.c("regular");
+        //this.methodProfiler.c("regular"); // Purpur
 
         org.spigotmc.ActivationRange.activateEntities(this); // Spigot
         //timings.entityTick.startTiming(); // Spigot // Purpur
@@ -1548,7 +1548,7 @@ public abstract class World implements IBlockAccess {
                 entity.vehicle = null;
             }
 
-            this.methodProfiler.a("tick");
+            //this.methodProfiler.a("tick"); // Purpur
             if (!entity.dead) {
                 try {
                     //entity.tickTimer.startTiming(); // Spigot // Purpur
@@ -1567,8 +1567,8 @@ public abstract class World implements IBlockAccess {
                 }
             }
 
-            this.methodProfiler.b();
-            this.methodProfiler.a("remove");
+            //this.methodProfiler.b(); // Purpur
+            //this.methodProfiler.a("remove"); // Purpur
             if (entity.dead) {
                 j = entity.ae;
                 k = entity.ag;
@@ -1582,12 +1582,12 @@ public abstract class World implements IBlockAccess {
                 this.b(entity);
             }
 
-            this.methodProfiler.b();
+            //this.methodProfiler.b(); // Purpur
         }
         guardEntityList = false; // Spigot
 
         //timings.entityTick.stopTiming(); // Spigot // Purpur
-        this.methodProfiler.c("blockEntities");
+        //this.methodProfiler.c("blockEntities"); // Purpur
         //timings.tileEntityTick.startTiming(); // Spigot // Purpur
         this.M = true;
         // CraftBukkit start - From below, clean up tile entities before ticking them
diff --git a/src/main/java/net/minecraft/server/WorldServer.java b/src/main/java/net/minecraft/server/WorldServer.java
index 41f3cbbdc..137c84a58 100644
--- a/src/main/java/net/minecraft/server/WorldServer.java
+++ b/src/main/java/net/minecraft/server/WorldServer.java
@@ -239,7 +239,7 @@ public class WorldServer extends World implements IAsyncTaskHandler {
         }
         // CraftBukkit end
         //timings.doChunkUnload.startTiming(); // Spigot // Purpur
-        this.methodProfiler.c("chunkSource");
+        //this.methodProfiler.c("chunkSource"); // Purpur
 
         // Only unload if chunkProvider isn't null
         if (this.chunkProvider != null) {
@@ -258,29 +258,29 @@ public class WorldServer extends World implements IAsyncTaskHandler {
         }
 
         //timings.doChunkUnload.stopTiming(); // Spigot // Purpur
-        this.methodProfiler.c("tickPending");
+        //this.methodProfiler.c("tickPending"); // Purpur
         //timings.scheduledBlocks.startTiming(); // Spigot // Purpur
         this.a(false);
         //timings.scheduledBlocks.stopTiming(); // Spigot // Purpur
-        this.methodProfiler.c("tickBlocks");
+        //this.methodProfiler.c("tickBlocks"); // Purpur
         //timings.chunkTicks.startTiming(); // Spigot // Purpur
         this.h();
         //timings.chunkTicks.stopTiming(); // Spigot // Purpur
         SpigotWorldConfig.getAntiXray().flushUpdates(this); // PaperSpigot
-        this.methodProfiler.c("chunkMap");
+        //this.methodProfiler.c("chunkMap"); // Purpur
         //timings.doChunkMap.startTiming(); // Spigot // Purpur
         this.manager.flush();
         //timings.doChunkMap.stopTiming(); // Spigot // Purpur
-        this.methodProfiler.c("village");
+        //this.methodProfiler.c("village"); // Purpur
         //timings.doVillages.startTiming(); // Spigot // Purpur
         this.villages.tick();
         this.siegeManager.a();
         //timings.doVillages.stopTiming(); // Spigot // Purpur
-        this.methodProfiler.c("portalForcer");
+        //this.methodProfiler.c("portalForcer"); // Purpur
         //timings.doPortalForcer.startTiming(); // Spigot // Purpur
         this.Q.a(this.getTime());
         //timings.doPortalForcer.stopTiming(); // Spigot // Purpur
-        this.methodProfiler.b();
+        //this.methodProfiler.b(); // Purpur
         //timings.doSounds.startTiming(); // Spigot // Purpur
         this.ak();
 
@@ -426,14 +426,14 @@ public class WorldServer extends World implements IAsyncTaskHandler {
                 int k = chunkX * 16;
                 int l = chunkZ * 16;
 
-                this.methodProfiler.a("getChunk");
+                //this.methodProfiler.a("getChunk"); // Purpur
                 Chunk chunk = this.getChunkAt(chunkX, chunkZ);
                 // CraftBukkit end
 
                 this.a(k, l, chunk);
-                this.methodProfiler.c("tickChunk");
+                //this.methodProfiler.c("tickChunk"); // Purpur
                 chunk.b(false);
-                this.methodProfiler.c("thunder");
+                //this.methodProfiler.c("thunder"); // Purpur
                 int i1;
                 BlockPosition blockposition;
 
@@ -446,7 +446,7 @@ public class WorldServer extends World implements IAsyncTaskHandler {
                     }
                 }
 
-                this.methodProfiler.c("iceandsnow");
+                //this.methodProfiler.c("iceandsnow"); // Purpur
                 if (!this.paperConfigTitanium.disableIceAndSnow && this.random.nextInt(16) == 0) { // PaperSpigot - Disable ice and snow
                     this.m = this.m * 3 + 1013904223;
                     i1 = this.m >> 2;
@@ -484,7 +484,7 @@ public class WorldServer extends World implements IAsyncTaskHandler {
                     }
                 }
 
-                this.methodProfiler.c("tickBlocks");
+                //this.methodProfiler.c("tickBlocks"); // Purpur
                 //timings.chunkTicksBlocks.startTiming(); // Spigot // Purpur
                 i1 = titaniumConfig.disabledGamerules.randomTickSpeed ? 3 : this.getGameRules().c("randomTickSpeed");
                 if (i1 > 0) {
@@ -644,7 +644,7 @@ public class WorldServer extends World implements IAsyncTaskHandler {
                 }
                 // PaperSpigot end
 
-                this.methodProfiler.a("cleaning");
+                //this.methodProfiler.a("cleaning"); // Purpur
 
                 //timings.scheduledBlocksCleanup.startTiming(); // Spigot // Purpur
                 NextTickListEntry nextticklistentry;
@@ -678,8 +678,8 @@ public class WorldServer extends World implements IAsyncTaskHandler {
                 }
                 // PaperSpigot end
 
-                this.methodProfiler.b();
-                this.methodProfiler.a("ticking");
+                //this.methodProfiler.b(); // Purpur
+                //this.methodProfiler.a("ticking"); // Purpur
                 //timings.scheduledBlocksTicking.startTiming(); // Spigot // Purpur
                 Iterator iterator = this.V.iterator();
 
@@ -711,7 +711,7 @@ public class WorldServer extends World implements IAsyncTaskHandler {
                 }
                 //timings.scheduledBlocksTicking.stopTiming(); // Spigot // Purpur
 
-                this.methodProfiler.b();
+                //this.methodProfiler.b(); // Purpur
                 this.V.clear();
                 return !this.M.isEmpty();
             }
-- 
2.36.0.windows.1

