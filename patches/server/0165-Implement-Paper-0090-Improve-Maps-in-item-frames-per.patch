From f3fc4a835cb8f2556036cfc664354ce1cd4fdb6e Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Fri, 29 Apr 2016 20:02:00 -0400
Subject: [PATCH] Implement [Paper-0090] Improve Maps (in item frames)
 performance and bug fixes by Aikar


diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index 247c0ae3a..d60fd9dc9 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -625,6 +625,14 @@ public abstract class EntityHuman extends EntityLiving {
                 this.b(StatisticList.v);
             }
 
+            // Paper start - remove player from map on drop
+            if (itemstack.getItem() == Items.FILLED_MAP)
+            {
+                WorldMap worldmap = ((ItemWorldMap) itemstack.getItem()).getSavedMap(itemstack, this.world);
+                worldmap.updateSeenPlayers(this, itemstack);
+            }
+            // Paper end
+
             return entityitem;
         }
     }
diff --git a/src/main/java/net/minecraft/server/EntityTrackerEntry.java b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
index 1b70d8a44..bc05f0e6c 100644
--- a/src/main/java/net/minecraft/server/EntityTrackerEntry.java
+++ b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
@@ -189,11 +189,11 @@ public class EntityTrackerEntry {
             this.broadcast(new PacketPlayOutAttachEntity(0, this.tracker, this.tracker.vehicle));
         }
 
-        if (this.tracker instanceof EntityItemFrame /*&& this.m % 10 == 0*/) { // CraftBukkit - Moved below, should always enter this block
+        if (this.tracker instanceof EntityItemFrame && this.m % 20 == 0) { // Paper
             EntityItemFrame entityitemframe = (EntityItemFrame) this.tracker;
             ItemStack itemstack = entityitemframe.getItem();
 
-            if (this.m % 10 == 0 && itemstack != null && itemstack.getItem() instanceof ItemWorldMap) { // CraftBukkit - Moved this.m % 10 logic here so item frames do not enter the other blocks
+            if (itemstack != null && itemstack.getItem() instanceof ItemWorldMap) { // Paper - moved back up
                 WorldMap worldmap = Items.FILLED_MAP.getSavedMap(itemstack, this.tracker.world);
                 Iterator iterator = this.trackedPlayers.iterator(); // CraftBukkit
 
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index ecdeb212e..c6ff1eeb1 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -1203,6 +1203,7 @@ public abstract class World implements IBlockAccess {
                     {
                         if ( iter.next().trackee == entity )
                         {
+                            map.decorations.remove(entity.getUniqueID()); // Paper
                             iter.remove();
                         }
                     }
diff --git a/src/main/java/net/minecraft/server/WorldMap.java b/src/main/java/net/minecraft/server/WorldMap.java
index f5d2d6d41..089de0627 100644
--- a/src/main/java/net/minecraft/server/WorldMap.java
+++ b/src/main/java/net/minecraft/server/WorldMap.java
@@ -3,6 +3,7 @@ package net.minecraft.server;
 import com.google.common.base.Charsets;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
+import java.util.Collection;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
@@ -10,9 +11,11 @@ import java.util.Map;
 // CraftBukkit start
 import java.util.UUID;
 
+import org.bukkit.Bukkit;
 import org.bukkit.craftbukkit.CraftServer;
 import org.bukkit.craftbukkit.CraftWorld;
 import org.bukkit.craftbukkit.map.CraftMapView;
+import org.bukkit.entity.Player;
 // CraftBukkit end
 
 public class WorldMap extends PersistentBase {
@@ -25,6 +28,7 @@ public class WorldMap extends PersistentBase {
     public List<WorldMap.WorldMapHumanTracker> g = Lists.newArrayList();
     public Map<EntityHuman, WorldMap.WorldMapHumanTracker> i = Maps.newHashMap(); // Spigot
     public Map<UUID, MapIcon> decorations = Maps.newLinkedHashMap(); // Spigot
+    private org.bukkit.craftbukkit.map.RenderData vanillaRender = new org.bukkit.craftbukkit.map.RenderData(); // Paper
 
     // CraftBukkit start
     public final CraftMapView mapView;
@@ -37,6 +41,7 @@ public class WorldMap extends PersistentBase {
         // CraftBukkit start
         mapView = new CraftMapView(this);
         server = (CraftServer) org.bukkit.Bukkit.getServer();
+        vanillaRender.buffer = colors; // Paper
         // CraftBukkit end
     }
 
@@ -105,6 +110,7 @@ public class WorldMap extends PersistentBase {
             }
         }
 
+        this.vanillaRender.buffer = this.colors; // Paper
     }
 
     public void b(NBTTagCompound nbttagcompound) {
@@ -136,6 +142,12 @@ public class WorldMap extends PersistentBase {
         nbttagcompound.setByteArray("colors", this.colors);
     }
 
+    // Paper start
+    public void updateSeenPlayers(EntityHuman entityhuman, ItemStack itemstack) {
+        this.a(entityhuman, itemstack);
+    }
+    // Paper end
+
     public void a(EntityHuman entityhuman, ItemStack itemstack) {
         if (!this.i.containsKey(entityhuman)) {
             WorldMap.WorldMapHumanTracker worldmap_worldmaphumantracker = new WorldMap.WorldMapHumanTracker(entityhuman);
@@ -277,9 +289,13 @@ public class WorldMap extends PersistentBase {
 
         public Packet a(ItemStack itemstack) {
             // CraftBukkit start
-            org.bukkit.craftbukkit.map.RenderData render = WorldMap.this.mapView.render((org.bukkit.craftbukkit.entity.CraftPlayer) this.trackee.getBukkitEntity()); // CraftBukkit
+            // org.bukkit.craftbukkit.map.RenderData render = WorldMap.this.mapView.render((org.bukkit.craftbukkit.entity.CraftPlayer) this.trackee.getBukkitEntity()); // CraftBukkit
+            if (!this.d && this.i % 5 != 0) { this.i++; return null; } // Paper - this won't end up sending, so don't render it!
+            boolean vanillaMaps = shouldUseVanillaMap(); // Paper
+            org.bukkit.craftbukkit.map.RenderData render = !vanillaMaps ? WorldMap.this.mapView.render((org.bukkit.craftbukkit.entity.CraftPlayer) this.trackee.getBukkitEntity()) : WorldMap.this.vanillaRender; // CraftBukkit // Paper
 
             java.util.Collection<MapIcon> icons = new java.util.ArrayList<MapIcon>();
+            if (vanillaMaps) addSeenPlayers(icons); // Paper
 
             for ( org.bukkit.map.MapCursor cursor : render.cursors) {
 
@@ -297,6 +313,21 @@ public class WorldMap extends PersistentBase {
             // CraftBukkit end
         }
 
+        // Paper start
+        private void addSeenPlayers(Collection<MapIcon> icons) {
+            Player player = (Player) this.trackee.getBukkitEntity();
+            WorldMap.this.decorations.forEach((uuid, mapIcon) -> {
+                Player other = Bukkit.getPlayer(uuid);
+                if (other == null || player.canSee(other))
+                    icons.add(mapIcon);
+            });
+        }
+
+        private boolean shouldUseVanillaMap() {
+            return mapView.getRenderers().size() == 1 && mapView.getRenderers().get(0).getClass() == org.bukkit.craftbukkit.map.CraftMapRenderer.class;
+        }
+        // Paper end
+
         public void a(int i, int j) {
             if (this.d) {
                 this.e = Math.min(this.e, i);
diff --git a/src/main/java/org/bukkit/craftbukkit/map/RenderData.java b/src/main/java/org/bukkit/craftbukkit/map/RenderData.java
index 256a13178..503a31b4e 100644
--- a/src/main/java/org/bukkit/craftbukkit/map/RenderData.java
+++ b/src/main/java/org/bukkit/craftbukkit/map/RenderData.java
@@ -5,7 +5,7 @@ import org.bukkit.map.MapCursor;
 
 public class RenderData {
 
-    public final byte[] buffer;
+    public byte[] buffer;
     public final ArrayList<MapCursor> cursors;
 
     public RenderData() {
-- 
2.36.0.windows.1

