From df4e20f3854352d38bd6ddcfaa87f9b2a3a3adc1 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Fri, 22 Jul 2022 01:27:15 +0200
Subject: [PATCH] Prevent NPE while using /tps command without async hit
 detection


diff --git a/src/main/java/org/spigotmc/TicksPerSecondCommand.java b/src/main/java/org/spigotmc/TicksPerSecondCommand.java
index f1964341..7087735a 100644
--- a/src/main/java/org/spigotmc/TicksPerSecondCommand.java
+++ b/src/main/java/org/spigotmc/TicksPerSecondCommand.java
@@ -44,19 +44,31 @@ public class TicksPerSecondCommand extends Command
 
         // Titanium start - async combat
         CombatThread hitDetectionThread = Titanium.get().getHitDetectionThread();
-        double[] tpsHitDetection = hitDetectionThread.getTPS();
-        String[] tpsHitDetectionAvg = new String[tpsHitDetection.length];
 
-        for (int i = 0; i < tpsHitDetection.length; i++) {
-            tpsHitDetectionAvg[i] = formatTps(tpsHitDetection[i], hitDetectionThread.getTps());
+        String[] tpsHitDetectionAvg;
+        if (hitDetectionThread != null) {
+            double[] tpsHitDetection = hitDetectionThread.getTPS();
+            tpsHitDetectionAvg = new String[tpsHitDetection.length];
+
+            for (int i = 0; i < tpsHitDetection.length; i++) {
+                tpsHitDetectionAvg[i] = formatTps(tpsHitDetection[i], hitDetectionThread.getTps());
+            }
+        } else {
+            tpsHitDetectionAvg = new String [] { "N/A", "N/A", "N/A" };
         }
 
         CombatThread knockbackThread = Titanium.get().getKnockbackThread();
-        double[] tpsKnockback = knockbackThread.getTPS();
-        String[] tpsKnockbackAvg = new String[tpsKnockback.length];
 
-        for (int i = 0; i < tpsKnockback.length; i++) {
-            tpsKnockbackAvg[i] = formatTps(tpsKnockback[i], knockbackThread.getTps());
+        String[] tpsKnockbackAvg;
+        if (knockbackThread != null) {
+            double[] tpsKnockback = knockbackThread.getTPS();
+            tpsKnockbackAvg = new String[tpsKnockback.length];
+
+            for (int i = 0; i < tpsKnockback.length; i++) {
+                tpsKnockbackAvg[i] = formatTps(tpsKnockback[i], knockbackThread.getTps());
+            }
+        } else {
+            tpsKnockbackAvg = new String [] { "N/A", "N/A", "N/A" };
         }
         // Titanium end
 
-- 
2.36.0.windows.1

