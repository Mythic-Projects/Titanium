From 417e8a3ee2548d0b20868b292eb02542b2b94954 Mon Sep 17 00:00:00 2001
From: uRyanxD <familiarodrigues123ro@gmail.com>
Date: Thu, 12 May 2022 21:32:01 -0300
Subject: [PATCH] Implement [PandaSpigot-0054] Disconnect for payload errors by
 uRyanxD


diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index d30402e4b..a6434e8a3 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -2141,19 +2141,36 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
         }
         // CraftBukkit start
         else if (packetplayincustompayload.a().equals("REGISTER")) {
-            String channels = packetplayincustompayload.b().toString(com.google.common.base.Charsets.UTF_8);
-            for (String channel : channels.split("\0")) {
-                getPlayer().addChannel(channel);
+            // PandaSpigot start - Disconnect for payload errors
+            try {
+                String channels = packetplayincustompayload.b().toString(com.google.common.base.Charsets.UTF_8);
+                for (String channel : channels.split("\0")) {
+                    getPlayer().addChannel(channel);
+                }
+            } catch (Exception ex) {
+                PlayerConnection.c.error("Couldn\'t register custom payload", ex);
+                this.disconnect("Invalid payload REGISTER!");
             }
         } else if (packetplayincustompayload.a().equals("UNREGISTER")) {
-            String channels = packetplayincustompayload.b().toString(com.google.common.base.Charsets.UTF_8);
-            for (String channel : channels.split("\0")) {
-                getPlayer().removeChannel(channel);
+            try {
+                String channels = packetplayincustompayload.b().toString(com.google.common.base.Charsets.UTF_8);
+                for (String channel : channels.split("\0")) {
+                    getPlayer().removeChannel(channel);
+                }
+            } catch (Exception ex) {
+                PlayerConnection.c.error("Couldn\'t register custom payload", ex);
+                this.disconnect("Invalid payload UNREGISTER!");
             }
         } else {
-            byte[] data = new byte[packetplayincustompayload.b().readableBytes()];
-            packetplayincustompayload.b().readBytes(data);
-            server.getMessenger().dispatchIncomingMessage(player.getBukkitEntity(), packetplayincustompayload.a(), data);
+            try {
+                byte[] data = new byte[packetplayincustompayload.b().readableBytes()];
+                packetplayincustompayload.b().readBytes(data);
+                server.getMessenger().dispatchIncomingMessage(player.getBukkitEntity(), packetplayincustompayload.a(), data);
+            } catch (Exception ex) {
+                PlayerConnection.c.error("Couldn\'t register custom payload", ex);
+                this.disconnect("Invalid custom payload!");
+            }
+            // PandaSpigot end - Disconnect for payload errors
         }
         // CraftBukkit end
         // CraftBukkit start
-- 
2.36.0.windows.1

