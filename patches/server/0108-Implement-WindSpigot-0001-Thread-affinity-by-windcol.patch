From ee4553320d3e4641a1277e0e071a00567ef216f8 Mon Sep 17 00:00:00 2001
From: windcolor-dev <79166388+windcolor-dev@users.noreply.github.com>
Date: Mon, 6 Jun 2022 17:15:15 +0200
Subject: [PATCH] Implement [WindSpigot-0001] Thread affinity by windcolor-dev


diff --git a/build.gradle b/build.gradle
index f3337264..dea6d8db 100644
--- a/build.gradle
+++ b/build.gradle
@@ -32,6 +32,8 @@ dependencies {
     implementation 'org.jline:jline-terminal-jansi:3.20.0'
     // PandaSpigot end
 
+    implementation 'net.openhft:affinity:3.21ea83' // WindSpigot - Thread affinity
+
     testImplementation 'junit:junit:4.13.2' // Titanium - Updated junit to 4.13.2
     testImplementation 'org.hamcrest:hamcrest-library:1.3'
 }
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 78cf40e4..655954c8 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1,8 +1,8 @@
 package net.minecraft.server;
 
+import co.aikar.timings.SpigotTimings;
 import com.google.common.base.Charsets;
 import com.google.common.collect.Lists;
-import com.google.common.collect.Queues;
 import com.google.common.util.concurrent.Futures;
 import com.google.common.util.concurrent.ListenableFuture;
 import com.google.common.util.concurrent.ListenableFutureTask;
@@ -20,7 +20,6 @@ import java.awt.GraphicsEnvironment;
 import java.awt.image.BufferedImage;
 import java.io.File;
 import java.io.IOException;
-import java.math.BigDecimal;
 import java.net.Proxy;
 import java.security.KeyPair;
 import java.text.SimpleDateFormat;
@@ -28,7 +27,6 @@ import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.Date;
-import java.util.Iterator;
 import java.util.List;
 import java.util.Queue;
 import java.util.Random;
@@ -41,19 +39,13 @@ import java.util.concurrent.locks.LockSupport;
 import java.util.function.BooleanSupplier;
 import java.util.function.Function;
 import javax.imageio.ImageIO;
+import joptsimple.OptionSet;
+import net.openhft.affinity.AffinityLock;
 import net.titanium.config.TitaniumConfig;
 import org.apache.commons.lang3.Validate;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
-
-// CraftBukkit start
-import java.io.IOException;
-
-//import jline.console.ConsoleReader; // PandaSpigot - comment out
-import joptsimple.OptionSet;
-
-import org.bukkit.craftbukkit.Main;
-import co.aikar.timings.SpigotTimings; // Spigot
+import org.bukkit.craftbukkit.chunkio.ChunkIOExecutor;
 // CraftBukkit end
 
 public abstract class MinecraftServer extends ReentrantIAsyncHandler<TasksPerTick> implements Runnable, ICommandListener, IAsyncTaskHandler, IMojangStatistics {
@@ -613,11 +605,30 @@ public abstract class MinecraftServer extends ReentrantIAsyncHandler<TasksPerTic
     }
     private static final java.math.BigDecimal TPS_BASE = new java.math.BigDecimal(1E9).multiply(new java.math.BigDecimal(SAMPLE_INTERVAL));
     // PaperSpigot End
- 
+
+    AffinityLock lock = null;
+
     public void run() {
         try {
             serverStartTime = getNanos(); // Paper
             if (this.init()) {
+                // WindSpigot start - implement thread affinity
+                if (server.serverConfig.threadAffinity) {
+                    LOGGER.info("Enabling Thread Affinity...");
+                    lock = AffinityLock.acquireLock();
+                    if (lock.cpuId() != -1) {
+                        LOGGER.info("CPU " + lock.cpuId() + " locked for server usage.");
+                        LOGGER.info("This will boost the server's performance if configured properly.");
+                        LOGGER.info("If not it will most likely decrease performance.");
+                        LOGGER.info("This is most effective on linux with JNA installed.");
+                        LOGGER.info("See https://github.com/OpenHFT/Java-Thread-Affinity#isolcpus for configuration.\"");
+                    } else {
+                        LOGGER.error("An error occured whilst enabling thread affinity!");
+                    }
+
+                }
+                // WindSpigot end
+
                 this.ab = az();
 
                 this.r.setMOTD(new ChatComponentText(this.motd));
diff --git a/src/main/java/net/titanium/config/TitaniumConfig.java b/src/main/java/net/titanium/config/TitaniumConfig.java
index 88d3aa85..8a1439a4 100644
--- a/src/main/java/net/titanium/config/TitaniumConfig.java
+++ b/src/main/java/net/titanium/config/TitaniumConfig.java
@@ -105,6 +105,10 @@ public class TitaniumConfig extends TitaniumConfigSection {
 
     }
 
+    @Comment("Allocates an entire cpu to the server - improves performance, but uses more cpu.")
+    @Comment("Enable it only if your OS is configured properly - see https://github.com/OpenHFT/Java-Thread-Affinity#isolcpus")
+    public boolean threadAffinity = false;
+
     public Chunk chunk = new Chunk();
 
     public static class Chunk extends TitaniumConfigSection {
-- 
2.36.0.windows.1

