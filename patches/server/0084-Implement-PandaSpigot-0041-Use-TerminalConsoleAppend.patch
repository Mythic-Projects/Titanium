From 139daebe41ea84767088a7e086e48d2c2da8690e Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Fri, 27 May 2022 21:43:20 +0200
Subject: [PATCH] Implement [PandaSpigot-0041] Use TerminalConsoleAppender for
 console improvements


diff --git a/pom.xml b/pom.xml
index 02dcaae99..5fa7c4db0 100644
--- a/pom.xml
+++ b/pom.xml
@@ -52,10 +52,16 @@
             <type>jar</type>
             <scope>compile</scope>
         </dependency>
+        <dependency>
+            <groupId>org.apache.logging.log4j</groupId>
+            <artifactId>log4j-api</artifactId>
+            <version>2.17.1</version>
+            <scope>compile</scope>
+        </dependency>
         <dependency>
             <groupId>org.apache.logging.log4j</groupId>
             <artifactId>log4j-core</artifactId>
-            <version>2.8.1</version>
+            <version>2.17.1</version>
             <scope>compile</scope>
         </dependency>
         <dependency>
@@ -72,13 +78,22 @@
             <type>jar</type>
             <scope>compile</scope>
         </dependency>
+        <!-- PandaSpigot start - Use TerminalConsoleAppender -->
+        <dependency>
+            <groupId>net.minecrell</groupId>
+            <artifactId>terminalconsoleappender</artifactId>
+            <version>1.3.0</version>
+            <type>jar</type>
+            <scope>compile</scope>
+        </dependency>
         <dependency>
-            <groupId>jline</groupId>
-            <artifactId>jline</artifactId>
-            <version>2.12</version>
+            <groupId>org.jline</groupId>
+            <artifactId>jline-terminal-jansi</artifactId>
+            <version>3.20.0</version>
             <type>jar</type>
             <scope>compile</scope>
         </dependency>
+        <!-- PandaSpigot end -->
         <dependency>
             <groupId>org.xerial</groupId>
             <artifactId>sqlite-jdbc</artifactId>
@@ -242,7 +257,7 @@
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-shade-plugin</artifactId>
-                <version>2.3</version>
+                <version>3.2.4</version>
                 <executions>
                     <execution>
                         <phase>package</phase>
@@ -279,9 +294,27 @@
                                     <shadedPattern>net.minecraft.server.v${minecraft_version}</shadedPattern>
                                 </relocation>
                             </relocations>
+                            <transformers>
+                                <transformer
+                                        implementation="io.github.edwgiz.log4j.maven.plugins.shade.transformer.Log4j2PluginCacheFileTransformer"> <!-- PandaSpigot - Use TerminalConsoleAppender -->
+                                </transformer>
+                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
+                                    <mainClass>org.bukkit.craftbukkit.Main</mainClass>
+                                    <manifestEntries>
+                                        <Multi-Release>true</Multi-Release>
+                                    </manifestEntries>
+                                </transformer>
+                            </transformers>
                         </configuration>
                     </execution>
                 </executions>
+                <dependencies>
+                    <dependency>
+                        <groupId>io.github.edwgiz</groupId>
+                        <artifactId>log4j-maven-shade-plugin-extensions</artifactId>
+                        <version>2.17.2</version>
+                    </dependency>
+                </dependencies>
             </plugin>
             <!-- Gotta go after shade plugin -->
             <plugin>
diff --git a/src/main/java/net/minecraft/server/DedicatedServer.java b/src/main/java/net/minecraft/server/DedicatedServer.java
index f1cace099..9525ea2a4 100644
--- a/src/main/java/net/minecraft/server/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/DedicatedServer.java
@@ -13,6 +13,7 @@ import java.util.Random;
 import java.util.concurrent.Callable;
 import java.util.concurrent.TimeUnit;
 import net.titanium.config.TitaniumConfig;
+import net.titanium.console.TitaniumConsole;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
@@ -70,6 +71,9 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
                 }
                 // CraftBukkit end
 
+                // Titanium (PandaSpigot) start
+                new TitaniumConsole(DedicatedServer.this).start();
+                /*
                 jline.console.ConsoleReader bufferedreader = reader; // CraftBukkit
                 String s;
 
@@ -89,7 +93,8 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
                 } catch (IOException ioexception) {
                     DedicatedServer.LOGGER.error("Exception handling console input", ioexception);
                 }
-
+                */
+                // Titanium (PandaSpigot) end
             }
         };
 
@@ -101,6 +106,9 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
         }
         global.addHandler(new org.bukkit.craftbukkit.util.ForwardLogHandler());
 
+        // PandaSpigot start - Not needed with TerminalConsoleAppender
+        final org.apache.logging.log4j.Logger logger = LogManager.getRootLogger();
+        /*
         final org.apache.logging.log4j.core.Logger logger = ((org.apache.logging.log4j.core.Logger) LogManager.getRootLogger());
         for (org.apache.logging.log4j.core.Appender appender : logger.getAppenders().values()) {
             if (appender instanceof org.apache.logging.log4j.core.appender.ConsoleAppender) {
@@ -109,6 +117,8 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
         }
 
         new Thread(new org.bukkit.craftbukkit.util.TerminalConsoleWriterThread(System.out, this.reader)).start();
+         */
+        // PandaSpigot end
 
         System.setOut(new PrintStream(new LoggerOutputStream(logger, Level.INFO), true));
         System.setErr(new PrintStream(new LoggerOutputStream(logger, Level.WARN), true));
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 006dc56a9..9623d760c 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -42,7 +42,7 @@ import org.apache.logging.log4j.Logger;
 // CraftBukkit start
 import java.io.IOException;
 
-import jline.console.ConsoleReader;
+//import jline.console.ConsoleReader; // PandaSpigot - comment out
 import joptsimple.OptionSet;
 
 import org.bukkit.craftbukkit.Main;
@@ -111,7 +111,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
     public OptionSet options;
     public org.bukkit.command.ConsoleCommandSender console;
     public org.bukkit.command.RemoteConsoleCommandSender remoteConsole;
-    public ConsoleReader reader;
+    //public ConsoleReader reader; // PandaSpigot - comment out
     public static int currentTick = 0; // PaperSpigot - Further improve tick loop
     public final Thread primaryThread;
     public java.util.Queue<Runnable> processQueue = new java.util.concurrent.ConcurrentLinkedQueue<Runnable>();
@@ -132,6 +132,8 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
         this.Y = this.V.createProfileRepository();
         // CraftBukkit start
         this.options = options;
+        // PandaSpigot start
+        /*
         // Try to see if we're actually running in a terminal, disable jline if not
         if (System.console() == null && System.getProperty("jline.terminal") == null) {
             System.setProperty("jline.terminal", "jline.UnsupportedTerminal");
@@ -153,6 +155,8 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
                 LOGGER.warn((String) null, ex);
             }
         }
+         */
+        // PandaSpigot end
         Runtime.getRuntime().addShutdownHook(new org.bukkit.craftbukkit.util.ServerShutdownThread(this));
 
         this.serverThread = primaryThread = new Thread(this, "Server thread"); // Moved from main
@@ -662,7 +666,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
             } finally {
                 // CraftBukkit start - Restore terminal to original settings
                 try {
-                    reader.getTerminal().restore();
+                    net.minecrell.terminalconsole.TerminalConsoleAppender.close(); // PandaSpigot - Use TerminalConsoleAppender
                 } catch (Exception ignored) {
                 }
                 // CraftBukkit end
@@ -1219,7 +1223,7 @@ public abstract class MinecraftServer implements Runnable, ICommandListener, IAs
     }
 
     public void sendMessage(IChatBaseComponent ichatbasecomponent) {
-        MinecraftServer.LOGGER.info(ichatbasecomponent.c());
+        MinecraftServer.LOGGER.info(org.bukkit.craftbukkit.util.CraftChatMessage.fromComponent(ichatbasecomponent)); // PandaSpigot - Log messages with color
     }
 
     public boolean a(int i, String s) {
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index 2dfce6d55..ecca9e9eb 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -18,6 +18,7 @@ import java.util.List;
 import java.util.Map;
 import java.util.UUID;
 import net.titanium.config.TitaniumConfig;
+import net.titanium.console.TitaniumConsoleCommandSender;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
@@ -72,8 +73,7 @@ public abstract class PlayerList {
 
     public PlayerList(MinecraftServer minecraftserver) {
         this.cserver = minecraftserver.server = new CraftServer(minecraftserver, this);
-        minecraftserver.console = org.bukkit.craftbukkit.command.ColouredConsoleSender.getInstance();
-        minecraftserver.reader.addCompleter(new org.bukkit.craftbukkit.command.ConsoleCommandCompleter(minecraftserver.server));
+        minecraftserver.console = new TitaniumConsoleCommandSender();
         // CraftBukkit end
         
         this.k = new GameProfileBanList(PlayerList.a);
diff --git a/src/main/java/net/titanium/console/TitaniumConsole.java b/src/main/java/net/titanium/console/TitaniumConsole.java
new file mode 100644
index 000000000..4825477ef
--- /dev/null
+++ b/src/main/java/net/titanium/console/TitaniumConsole.java
@@ -0,0 +1,39 @@
+package net.titanium.console;
+
+import java.nio.file.Paths;
+import net.minecraft.server.DedicatedServer;
+import net.minecrell.terminalconsole.SimpleTerminalConsole;
+import org.jline.reader.LineReader;
+import org.jline.reader.LineReaderBuilder;
+
+// Titanium - it's come from PandaSpigot and originally was named PandaConsole
+public class TitaniumConsole extends SimpleTerminalConsole {
+    private final DedicatedServer server;
+
+    public TitaniumConsole(DedicatedServer server) {
+        this.server = server;
+    }
+
+    @Override
+    protected boolean isRunning() {
+        return !this.server.isStopped() && this.server.isRunning();
+    }
+
+    @Override
+    protected void runCommand(String command) {
+        this.server.issueCommand(command, this.server);
+    }
+
+    @Override
+    protected void shutdown() {
+        this.server.safeShutdown();
+    }
+
+    @Override
+    protected LineReader buildReader(LineReaderBuilder builder) {
+        return super.buildReader(builder
+                .appName("PandaSpigot")
+                .variable(LineReader.HISTORY_FILE, Paths.get(".console_history"))
+                .completer(new TitaniumConsoleCompleter(this.server)));
+    }
+}
diff --git a/src/main/java/net/titanium/console/TitaniumConsoleCommandSender.java b/src/main/java/net/titanium/console/TitaniumConsoleCommandSender.java
new file mode 100644
index 000000000..0ab83f7ac
--- /dev/null
+++ b/src/main/java/net/titanium/console/TitaniumConsoleCommandSender.java
@@ -0,0 +1,17 @@
+package net.titanium.console;
+
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.bukkit.craftbukkit.command.CraftConsoleCommandSender;
+
+// Titanium - it's come from PandaSpigot and originally was named PandaConsoleCommandSender
+public class TitaniumConsoleCommandSender extends CraftConsoleCommandSender {
+    private static final Logger LOGGER = LogManager.getRootLogger();
+
+    @Override
+    public void sendRawMessage(String message) {
+        // TerminalConsoleAppender supports color codes directly in log messages
+        LOGGER.info(message);
+    }
+}
+
diff --git a/src/main/java/net/titanium/console/TitaniumConsoleCompleter.java b/src/main/java/net/titanium/console/TitaniumConsoleCompleter.java
new file mode 100644
index 000000000..606af7f1a
--- /dev/null
+++ b/src/main/java/net/titanium/console/TitaniumConsoleCompleter.java
@@ -0,0 +1,56 @@
+package net.titanium.console;
+
+import java.util.List;
+import java.util.concurrent.ExecutionException;
+import java.util.logging.Level;
+import net.minecraft.server.DedicatedServer;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.craftbukkit.util.Waitable;
+import org.jline.reader.Candidate;
+import org.jline.reader.Completer;
+import org.jline.reader.LineReader;
+import org.jline.reader.ParsedLine;
+
+// Titanium - it's come from PandaSpigot and originally was named PandaConsoleCompleter
+public class TitaniumConsoleCompleter implements Completer {
+    private final DedicatedServer server;
+
+    public TitaniumConsoleCompleter(DedicatedServer server) {
+        this.server = server;
+    }
+
+    @Override
+    public void complete(LineReader reader, ParsedLine line, List<Candidate> candidates) {
+        CompletionWaiter waiter = new CompletionWaiter(line.line());
+        this.server.processQueue.add(waiter);
+
+        try {
+            List<String> offers = waiter.get(); // wait until completions get processed on main thread
+
+            for (String offer : offers) {
+                if (offer.isEmpty()) continue;
+
+                candidates.add(new Candidate(offer));
+            }
+        } catch (ExecutionException e) {
+            this.server.server.getLogger().log(Level.WARNING, "Unhandled exception when tab completing", e);
+        } catch (InterruptedException e) {
+            Thread.currentThread().interrupt();
+        }
+    }
+
+    private class CompletionWaiter extends Waitable<List<String>> {
+        private final String buffer;
+
+        private CompletionWaiter(String buffer) {
+            this.buffer = buffer;
+        }
+
+        @Override
+        protected List<String> evaluate() {
+            final CraftServer server = TitaniumConsoleCompleter.this.server.server;
+
+            return server.getCommandMap().tabComplete(server.getConsoleSender(), this.buffer);
+        }
+    }
+}
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 94a945887..8eebe388c 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -134,7 +134,7 @@ import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufOutputStream;
 import io.netty.buffer.Unpooled;
 import io.netty.handler.codec.base64.Base64;
-import jline.console.ConsoleReader;
+//import jline.console.ConsoleReader; // PandaSpigot - comment out
 import net.md_5.bungee.api.chat.BaseComponent;
 
 public final class CraftServer implements Server {
@@ -1135,9 +1135,11 @@ public final class CraftServer implements Server {
         return logger;
     }
 
+    /* // PandaSpigot start - jline update
     public ConsoleReader getReader() {
         return console.reader;
     }
+    */ // PandaSpigot end
 
     @Override
     public PluginCommand getPluginCommand(String name) {
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index 43a1c4985..109563b91 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -10,7 +10,7 @@ import java.util.logging.Logger;
 import joptsimple.OptionParser;
 import joptsimple.OptionSet;
 import net.minecraft.server.MinecraftServer;
-import org.fusesource.jansi.AnsiConsole;
+import net.minecrell.terminalconsole.TerminalConsoleAppender; // PandaSpigot
 
 public class Main {
     public static boolean useJline = true;
@@ -174,6 +174,8 @@ public class Main {
             }
 
             try {
+                // PandaSpigot start - Handled by TerminalConsoleAppender
+                /*
                 // This trick bypasses Maven Shade's clever rewriting of our getProperty call when using String literals
                 String jline_UnsupportedTerminal = new String(new char[] {'j','l','i','n','e','.','U','n','s','u','p','p','o','r','t','e','d','T','e','r','m','i','n','a','l'});
                 String jline_terminal = new String(new char[] {'j','l','i','n','e','.','t','e','r','m','i','n','a','l'});
@@ -196,6 +198,23 @@ public class Main {
                 if (options.has("noconsole")) {
                     useConsole = false;
                 }
+                 */
+                // PandaSpigot end
+
+                // PandaSpigot start
+                if (options.has("nojline")) {
+                    System.setProperty(TerminalConsoleAppender.JLINE_OVERRIDE_PROPERTY, "false");
+                    useJline = false;
+                }
+                // PandaSpigot end
+
+                if (options.has("noconsole")) {
+                    useConsole = false;
+                    // PandaSpigot start
+                    useJline = false;
+                    System.setProperty(TerminalConsoleAppender.JLINE_OVERRIDE_PROPERTY, "false");
+                    // PandaSpigot end
+                }
 
                 // Spigot Start
                 int maxPermGen = 0; // In kb
@@ -213,6 +232,7 @@ public class Main {
                     System.out.println( "Please see http://www.spigotmc.org/wiki/changing-permgen-size/ for more details and more in-depth instructions." );
                 }
                 // Spigot End
+                System.setProperty("library.jansi.version", "PandaSpigot"); // PandaSpigot - set meaningless jansi version to prevent git builds from crashing on Windows
                 System.out.println("Loading libraries, please wait...");
                 MinecraftServer.main(options);
             } catch (Throwable t) {
diff --git a/src/main/java/org/bukkit/craftbukkit/command/ColouredConsoleSender.java b/src/main/java/org/bukkit/craftbukkit/command/ColouredConsoleSender.java
index 26a2fb894..93b549afb 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/ColouredConsoleSender.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/ColouredConsoleSender.java
@@ -5,15 +5,15 @@ import java.util.Map;
 
 import org.fusesource.jansi.Ansi;
 import org.fusesource.jansi.Ansi.Attribute;
-import jline.Terminal;
+//import jline.Terminal; // PandaSpigot - comment out
 
 import org.bukkit.Bukkit;
 import org.bukkit.ChatColor;
 import org.bukkit.command.ConsoleCommandSender;
 import org.bukkit.craftbukkit.CraftServer;
 
-public class ColouredConsoleSender extends CraftConsoleCommandSender {
-    private final Terminal terminal;
+public class ColouredConsoleSender /*extends CraftConsoleCommandSender*/ { // PandaSpigot start - disable
+    /*private final Terminal terminal;
     private final Map<ChatColor, String> replacements = new EnumMap<ChatColor, String>(ChatColor.class);
     private final ChatColor[] colors = ChatColor.values();
 
@@ -70,5 +70,6 @@ public class ColouredConsoleSender extends CraftConsoleCommandSender {
         } else {
             return new ColouredConsoleSender();
         }
-    }
+    }*/
+    // PandaSpigot end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/command/ConsoleCommandCompleter.java b/src/main/java/org/bukkit/craftbukkit/command/ConsoleCommandCompleter.java
index 7ef577271..e99eab8aa 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/ConsoleCommandCompleter.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/ConsoleCommandCompleter.java
@@ -7,9 +7,9 @@ import java.util.logging.Level;
 import org.bukkit.craftbukkit.CraftServer;
 import org.bukkit.craftbukkit.util.Waitable;
 
-import jline.console.completer.Completer;
+//import jline.console.completer.Completer; // PandaSpigot - Remove jline2 import
 
-public class ConsoleCommandCompleter implements Completer {
+public class ConsoleCommandCompleter /*implements Completer*/ { // PandaSpigot - This class is no longer used
     private final CraftServer server;
 
     public ConsoleCommandCompleter(CraftServer server) {
diff --git a/src/main/java/org/bukkit/craftbukkit/util/ServerShutdownThread.java b/src/main/java/org/bukkit/craftbukkit/util/ServerShutdownThread.java
index ae3481ba8..0f8e49997 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/ServerShutdownThread.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/ServerShutdownThread.java
@@ -18,7 +18,7 @@ public class ServerShutdownThread extends Thread {
             ex.printStackTrace();
         } finally {
             try {
-                server.reader.getTerminal().restore();
+                net.minecrell.terminalconsole.TerminalConsoleAppender.close(); // PandaSpigot - Use TerminalConsoleAppender
             } catch (Exception e) {
             }
         }
diff --git a/src/main/java/org/bukkit/craftbukkit/util/TerminalConsoleWriterThread.java b/src/main/java/org/bukkit/craftbukkit/util/TerminalConsoleWriterThread.java
index 772f730ff..784d41dbd 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/TerminalConsoleWriterThread.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/TerminalConsoleWriterThread.java
@@ -4,11 +4,11 @@ import java.io.IOException;
 import java.io.OutputStream;
 import java.util.logging.Level;
 import java.util.logging.Logger;
-import jline.console.ConsoleReader;
+//import jline.console.ConsoleReader; // PandaSpigot - comment out
 import com.mojang.util.QueueLogAppender;
 import org.bukkit.craftbukkit.Main;
 
-public class TerminalConsoleWriterThread implements Runnable {
+public class TerminalConsoleWriterThread /*implements Runnable */{/* // PandaSpigot start - disable
     final private ConsoleReader reader;
     final private OutputStream output;
 
@@ -48,5 +48,6 @@ public class TerminalConsoleWriterThread implements Runnable {
                 Logger.getLogger(TerminalConsoleWriterThread.class.getName()).log(Level.SEVERE, null, ex);
             }
         }
-    }
+    }*/
+    // PandaSpigot end
 }
diff --git a/src/main/resources/log4j2.component.properties b/src/main/resources/log4j2.component.properties
new file mode 100644
index 000000000..0694b2146
--- /dev/null
+++ b/src/main/resources/log4j2.component.properties
@@ -0,0 +1 @@
+log4j.skipJansi=true
diff --git a/src/main/resources/log4j2.xml b/src/main/resources/log4j2.xml
index 63cb069fe..9af4553cb 100644
--- a/src/main/resources/log4j2.xml
+++ b/src/main/resources/log4j2.xml
@@ -1,12 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <Configuration status="WARN" packages="com.mojang.util">
     <Appenders>
-        <Console name="WINDOWS_COMPAT" target="SYSTEM_OUT"></Console>
-        <Queue name="TerminalConsole">
-            <PatternLayout pattern="[%d{HH:mm:ss} %level]: %msg%n" /> <!-- Paper - update log4j -->
-        </Queue>
+        <TerminalConsole name="TerminalConsole">
+            <PatternLayout pattern="%highlightError{[%d{HH:mm:ss} %level]: %minecraftFormatting{%msg{nolookups}}%n%xEx}" />
+        </TerminalConsole>
         <RollingRandomAccessFile name="File" fileName="logs/latest.log" filePattern="logs/%d{yyyy-MM-dd}-%i.log.gz">
-            <PatternLayout pattern="[%d{HH:mm:ss}] [%t/%level]: %msg%n" /> <!-- Paper - update log4j -->
+            <PatternLayout pattern="[%d{HH:mm:ss}] [%t/%level]: %minecraftFormatting{%msg{nolookups}}{strip}%n" />
             <Policies>
                 <TimeBasedTriggeringPolicy />
                 <OnStartupTriggeringPolicy />
@@ -18,7 +17,6 @@
             <filters>
                 <MarkerFilter marker="NETWORK_PACKETS" onMatch="DENY" onMismatch="NEUTRAL" />
             </filters>
-            <AppenderRef ref="WINDOWS_COMPAT" level="info"/>
             <AppenderRef ref="File"/>
             <AppenderRef ref="TerminalConsole" level="info"/>
         </Root>
-- 
2.36.0.windows.1

