From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Fri, 9 Apr 2021 15:10:40 +0200
Subject: [PATCH] Implement [Paper-0144] Improve Minecraft Hopper Performance


diff --git a/src/main/java/net/minecraft/server/TileEntity.java b/src/main/java/net/minecraft/server/TileEntity.java
index f68b132fb9d0b38f2ebc1e4c8c4ca6ef993fc72a..dd9efebad318b9421770f233363ef3d8f47d89ef 100644
--- a/src/main/java/net/minecraft/server/TileEntity.java
+++ b/src/main/java/net/minecraft/server/TileEntity.java
@@ -22,6 +22,7 @@ public abstract class TileEntity {
     protected boolean d;
     private int h;
     protected Block e;
+    static boolean IGNORE_TILE_UPDATES = false; // Paper
 
     public TileEntity() {
         this.position = BlockPosition.ZERO;
@@ -101,6 +102,7 @@ public abstract class TileEntity {
 
     public void update() {
         if (this.world != null) {
+            if (IGNORE_TILE_UPDATES) return; // Paper
             IBlockData iblockdata = this.world.getType(this.position);
 
             this.h = iblockdata.getBlock().toLegacyData(iblockdata);
diff --git a/src/main/java/net/minecraft/server/TileEntityHopper.java b/src/main/java/net/minecraft/server/TileEntityHopper.java
index 6de8d4afe525ae3152f682eafac054311b9b386e..5b4e56179647a84d42d4c37d8d40ad76714c278a 100644
--- a/src/main/java/net/minecraft/server/TileEntityHopper.java
+++ b/src/main/java/net/minecraft/server/TileEntityHopper.java
@@ -504,7 +504,9 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
             boolean flag = false;
 
             if (itemstack1 == null) {
+                IGNORE_TILE_UPDATES = true; // Paper
                 iinventory.setItem(i, itemstack);
+                IGNORE_TILE_UPDATES = false; // Paper
                 itemstack = null;
                 flag = true;
             } else if (a(itemstack1, itemstack)) {
@@ -599,6 +601,7 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
         this.g = i;
     }
 
+    boolean isCooledDown() { return n(); } // Paper // OBFHELPER
     public boolean n() {
         return this.g > 0;
     }
