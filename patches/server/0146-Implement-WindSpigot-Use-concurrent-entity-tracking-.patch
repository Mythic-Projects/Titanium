From 6a8052c68c9a47d2758a29fed29512e005027dd4 Mon Sep 17 00:00:00 2001
From: windcolor-dev <teaglehao@gmail.com>
Date: Tue, 21 Jun 2022 01:12:42 +0200
Subject: [PATCH] Implement [WindSpigot-????] Use concurrent entity tracking
 collections by windcolor-dev


diff --git a/src/main/java/ga/windpvp/windspigot/commons/ConcurrentIntHashMap.java b/src/main/java/ga/windpvp/windspigot/commons/ConcurrentIntHashMap.java
new file mode 100644
index 000000000..eca816bed
--- /dev/null
+++ b/src/main/java/ga/windpvp/windspigot/commons/ConcurrentIntHashMap.java
@@ -0,0 +1,27 @@
+package ga.windpvp.windspigot.commons;
+
+import net.minecraft.server.IntHashMap;
+import static ga.windpvp.windspigot.async.AsyncUtil.runSynchronized;
+
+public class ConcurrentIntHashMap<V> extends IntHashMap<V> {
+	
+	public V get(int var1) {
+		return runSynchronized(this, () -> super.get(var1));
+	}
+
+	public boolean b(int var1) {
+		return runSynchronized(this, () -> super.b(var1));
+	}
+
+	public void a(int var1, V var2) {
+		runSynchronized(this, () -> super.a(var1, var2));
+	}
+
+	public V d(int var1) {
+		return runSynchronized(this, () -> super.d(var1));
+	}
+
+	public void c() {
+		runSynchronized(this, super::c);
+	}
+}
diff --git a/src/main/java/me/rastrian/dev/utils/IndexedLinkedHashSet.java b/src/main/java/me/rastrian/dev/utils/IndexedLinkedHashSet.java
index 5e89ec430..519eed777 100644
--- a/src/main/java/me/rastrian/dev/utils/IndexedLinkedHashSet.java
+++ b/src/main/java/me/rastrian/dev/utils/IndexedLinkedHashSet.java
@@ -1,15 +1,18 @@
 package me.rastrian.dev.utils;
 
+import com.google.common.collect.Lists;
+import com.google.common.collect.Sets;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashSet;
 import java.util.Iterator;
+import java.util.List;
 import java.util.Set;
 
 public final class IndexedLinkedHashSet<E> implements Set<E> {
 
-    private final ArrayList<E> list = new ArrayList<>();
-    private final HashSet<E> set = new HashSet<>();
+    private final List<E> list = Lists.newCopyOnWriteArrayList();
+    private final Set<E> set = Sets.newConcurrentHashSet();
 
     public boolean add(E e) {
         if (set.add(e)) {
diff --git a/src/main/java/net/minecraft/server/EntityTracker.java b/src/main/java/net/minecraft/server/EntityTracker.java
index 0df4d470c..80f96838a 100644
--- a/src/main/java/net/minecraft/server/EntityTracker.java
+++ b/src/main/java/net/minecraft/server/EntityTracker.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import ga.windpvp.windspigot.commons.ConcurrentIntHashMap;
 import java.util.Iterator;
 import java.util.concurrent.Callable;
 import me.rastrian.dev.utils.IndexedLinkedHashSet;
@@ -17,7 +18,7 @@ public class EntityTracker {
     private Set<EntityTrackerEntry> c = new io.papermc.paper.util.maplist.ObjectMapList<>(); // IonSpigot - HashSet -> ObjectMapList
      */
     // Nacho end
-    public IntHashMap<EntityTrackerEntry> trackedEntities = new IntHashMap<>(); // tracked entities hash table
+    public IntHashMap<EntityTrackerEntry> trackedEntities = new ConcurrentIntHashMap<>(); // WindSpigot
 
     // Nacho start - Async entity tracker
     private volatile int noTrackDistance = 0; // WindSpigot - volatile
-- 
2.36.0.windows.1

