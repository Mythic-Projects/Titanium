From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Sun, 22 May 2022 23:13:48 +0200
Subject: [PATCH] Implement [FlamePaper-0030] Adaptive chunk GC


diff --git a/src/main/java/net/titanium/config/TitaniumConfig.java b/src/main/java/net/titanium/config/TitaniumConfig.java
index 1be660fed7a1805c4461cfd25d51bda55b40cfcb..1ab7361bd3939448ca9015e7d88a496d4d9bd107 100644
--- a/src/main/java/net/titanium/config/TitaniumConfig.java
+++ b/src/main/java/net/titanium/config/TitaniumConfig.java
@@ -78,6 +78,9 @@ public class TitaniumConfig extends TitaniumConfigSection {
 
     public static class Chunk extends TitaniumConfigSection {
 
+        //TODO comment this
+        public boolean adaptiveChunkGC = false;
+
         @Comment("Enabling this option prevents entities from moving in unloaded chunk (and for eg. falling down in \"slow-motion\")")
         public boolean disableUnloadedChunksMovement = false;
 
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 2aadafeae6c35347b1e092bab720a8264f535809..46fcbc0196900ec42aa9b7d837d1ef8ece11d8e6 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -14,6 +14,7 @@ import java.util.UUID;
 
 import net.minecraft.server.*;
 
+import net.titanium.config.TitaniumConfig;
 import org.apache.commons.lang.Validate;
 import org.bukkit.BlockChangeDelegate;
 import org.bukkit.Bukkit;
@@ -1395,9 +1396,14 @@ public class CraftWorld implements World {
     }
 
     public void processChunkGC() {
-        chunkGCTickCount++;
-
-        if (chunkLoadCount >= server.chunkGCLoadThresh && server.chunkGCLoadThresh > 0) {
+        // FlamePaper start - Adaptative chunk GC
+        int playerCount = getPlayers().size();
+        int viewDistance = getHandle().getServer().getViewDistance();
+        int viewChunks = ((viewDistance * 2) + 1);
+        int chunkGCLoadThreshold = TitaniumConfig.get().chunk.adaptiveChunkGC ? (world.keepSpawnInMemory ? 256 : 0) + playerCount * (viewChunks * viewChunks) : server.chunkGCLoadThresh;
+
+        if (chunkLoadCount > chunkGCLoadThreshold && chunkGCLoadThreshold > 0) {
+            // FlamePaper end - Adaptative chunk GC
             chunkLoadCount = 0;
         } else if (chunkGCTickCount >= server.chunkGCPeriod && server.chunkGCPeriod > 0) {
             chunkGCTickCount = 0;
