From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Mon, 2 May 2022 11:53:59 +0200
Subject: [PATCH] Implement [FlamePaper-0015] Fix Book Exploits


diff --git a/src/main/java/net/titanium/config/TitaniumConfig.java b/src/main/java/net/titanium/config/TitaniumConfig.java
index f5e6cb99120cac3e991aaffce560613b6266d3e2..94d101d36bc0076e010f0991385222386d1ac746 100644
--- a/src/main/java/net/titanium/config/TitaniumConfig.java
+++ b/src/main/java/net/titanium/config/TitaniumConfig.java
@@ -76,6 +76,32 @@ public class TitaniumConfig extends TitaniumConfigSection {
     @Comment("Making this value even bigger could be good idea and have good impact on performance.")
     public int playerTimeStatisticsInterval = 20;
 
+    @Comment("Configuration of book limits.")
+    @Comment("Setting these values prevent players from using NBT overflow exploits.")
+    @Comment("See also nbt-read-limiter, maybe you don't have to change these values.")
+    public Book book = new Book();
+
+    public static class Book extends TitaniumConfigSection {
+
+        @Comment("The max book title length.")
+        @Comment("Optimal values is 32.")
+        public int maxTitleLength = 1024;
+
+        @Comment("The max book author length.")
+        @Comment("Optimal values is 16 (since players nicknames are up to 16 characters long).")
+        public int maxAuthorLength = 1024;
+
+        @Comment("The max amount of pages a book can have.")
+        @Comment("Disable limit with -1")
+        @Comment("Optimal values is 64.")
+        public int maxPages = -1;
+
+        @Comment("The max length of one page the book can have.")
+        @Comment("Optimal values is 400.")
+        public int maxPageLength = 32767;
+
+    }
+
     public Chunk chunk = new Chunk();
 
     public static class Chunk extends TitaniumConfigSection {
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
index 0b5ada0118f521eaca65b0fd67ebf232fa183b1a..83926add2ce537b083df837b7595785f3a7f2981 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
@@ -1,12 +1,14 @@
 package org.bukkit.craftbukkit.inventory;
 
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
 
 import net.minecraft.server.NBTTagCompound;
 import net.minecraft.server.NBTTagList;
 
+import net.titanium.config.TitaniumConfig;
 import org.apache.commons.lang.Validate;
 import org.bukkit.Material;
 import org.bukkit.configuration.serialization.DelegateDeserialization;
@@ -33,8 +35,12 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
     static final ItemMetaKey BOOK_PAGES = new ItemMetaKey("pages");
     static final ItemMetaKey RESOLVED = new ItemMetaKey("resolved");
     static final ItemMetaKey GENERATION = new ItemMetaKey("generation");
-    static final int MAX_PAGE_LENGTH = Short.MAX_VALUE; // TODO: Check me
-    static final int MAX_TITLE_LENGTH = 0xffff;
+    // FlamePaper start - Fix Book Exploits
+    static final int MAX_PAGE_LENGTH = TitaniumConfig.get().book.maxPageLength;
+    static final int MAX_TITLE_LENGTH = TitaniumConfig.get().book.maxTitleLength;
+    static final int MAX_PAGES = TitaniumConfig.get().book.maxPages;
+    static final int MAX_AUTHOR_LENGTH = TitaniumConfig.get().book.maxAuthorLength;
+    // FlamePaper end - Fix Book Exploits
 
     protected String title;
     protected String author;
@@ -61,11 +67,13 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
         super(tag);
 
         if (tag.hasKey(BOOK_TITLE.NBT)) {
-            this.title = limit( tag.getString(BOOK_TITLE.NBT), 1024 ); // Spigot
+            // FlamePaper - Apply title limit
+            this.title = limit( tag.getString(BOOK_TITLE.NBT), MAX_TITLE_LENGTH); // Spigot
         }
 
         if (tag.hasKey(BOOK_AUTHOR.NBT)) {
-            this.author = limit( tag.getString(BOOK_AUTHOR.NBT), 1024 ); // Spigot
+            // FlamePaper - Apply author limit
+            this.author = limit( tag.getString(BOOK_AUTHOR.NBT), MAX_AUTHOR_LENGTH); // Spigot
         }
 
         boolean resolved = false;
@@ -80,7 +88,10 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
         if (tag.hasKey(BOOK_PAGES.NBT) && handlePages) {
             NBTTagList pages = tag.getList(BOOK_PAGES.NBT, 8);
 
-            for (int i = 0; i < pages.size(); i++) {
+            // FlamePaper - Fix Book Exploits // Titanium support disabling max pages count
+            int size = MAX_PAGES == -1 ? pages.size() : Math.min(pages.size(), MAX_PAGES);
+
+            for (int i = 0; i < size; i++) {
                 String page = pages.getString(i);
                 if (resolved) {
                     try {
@@ -90,7 +101,8 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
                         // Ignore and treat as an old book
                     }
                 }
-                addPage( limit( page, 2048 ) ); // Spigot
+                // FlamePaper - Fix Book Exploits
+                addPage( limit( page, MAX_PAGE_LENGTH) ); // Spigot
             }
         }
     }
@@ -104,10 +116,20 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
 
         Iterable<?> pages = SerializableMeta.getObject(Iterable.class, map, BOOK_PAGES.BUKKIT, true);
         if(pages != null) {
+            int pageCount = 0;
+
             for (Object page : pages) {
-                if (page instanceof String) {
-                    addPage((String) page);
+                // FlamePaper - Fix Book Exploits
+                if (MAX_PAGES == -1 || pageCount < MAX_PAGES) {
+                    if (page instanceof String) {
+                        addPage((String) page);
+                    }
+
+                    pageCount++;
+
+                    continue;
                 }
+                break;
             }
         }
         
@@ -186,12 +208,10 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
     public boolean setTitle(final String title) {
         if (title == null) {
             this.title = null;
-            return true;
-        } else if (title.length() > MAX_TITLE_LENGTH) {
-            return false;
+        } else {
+            // FlamePaper - Fix Book Exploits
+            this.title = title.substring(0, Math.min(title.length(), MAX_PAGE_LENGTH));
         }
-
-        this.title = title;
         return true;
     }
 
@@ -213,25 +233,35 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
             throw new IllegalArgumentException("Invalid page number " + page + "/" + pages.size());
         }
 
-        String newText = text == null ? "" : text.length() > MAX_PAGE_LENGTH ? text.substring(0, MAX_PAGE_LENGTH) : text;
+        // FlamePaper - Fix Book Exploits
+        String newText = text == null ? "" : text.substring(0, Math.min(text.length(), MAX_PAGE_LENGTH));
         pages.set(page - 1, CraftChatMessage.fromString(newText, true)[0]);
     }
 
     public void setPages(final String... pages) {
         this.pages.clear();
-
         addPage(pages);
     }
 
     public void addPage(final String... pages) {
-        for (String page : pages) {
-            if (page == null) {
-                page = "";
-            } else if (page.length() > MAX_PAGE_LENGTH) {
-                page = page.substring(0, MAX_PAGE_LENGTH);
-            }
+        // FlamePaper - Fix Book Exploits
+        int size = MAX_PAGES == -1 ? pages.length : Math.min(pages.length, MAX_PAGES);
+        for (int i = 0; i < size; i++) {
+            // FlamePaper - Fix Book Exploits // Titanium - Support disabling max pages count
+            if (MAX_PAGES == -1 || getPageCount() < MAX_PAGES) {
+                String page = pages[i];
+
+                if (page == null) {
+                    page = "";
+
+                } else if (page.length() > MAX_PAGE_LENGTH) {
+                    page = page.substring(0, MAX_PAGE_LENGTH);
 
-            this.pages.add(CraftChatMessage.fromString(page, true)[0]);
+                }
+                this.pages.add(CraftChatMessage.fromString(page, true)[0]);
+                continue;
+            }
+            break;
         }
     }
 
@@ -257,9 +287,8 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
 
     public void setPages(List<String> pages) {
         this.pages.clear();
-        for (String page : pages) {
-            addPage(page);
-        }
+        // FlamePaper - Fix Book Exploits
+        addPage(pages.toArray(new String[0]));
     }
 
     private boolean isValidPage(int page) {
