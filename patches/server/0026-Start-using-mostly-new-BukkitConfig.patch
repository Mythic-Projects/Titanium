From 3f7500a96a1be7a8be825b02b3d7ba56c613cc83 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Sat, 30 Apr 2022 11:40:01 +0200
Subject: [PATCH] Start using mostly new BukkitConfig


diff --git a/src/main/java/net/minecraft/server/DedicatedServer.java b/src/main/java/net/minecraft/server/DedicatedServer.java
index 79a53cc4..f86b5d29 100644
--- a/src/main/java/net/minecraft/server/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/DedicatedServer.java
@@ -12,6 +12,7 @@ import java.util.List;
 import java.util.Random;
 import java.util.concurrent.Callable;
 import java.util.concurrent.TimeUnit;
+import net.titanium.config.TitaniumConfig;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
@@ -176,6 +177,7 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
             // Spigot start
             this.a((PlayerList) (new DedicatedPlayerList(this)));
             // Spigot end
+            TitaniumConfig.get().registerCommands();
             SharedConfig.registerCommands();
 
             DedicatedServer.LOGGER.info("Generating keypair");
diff --git a/src/main/java/net/titanium/config/BukkitConfig.java b/src/main/java/net/titanium/config/BukkitConfig.java
index 75a9ebec..ad3cda4e 100644
--- a/src/main/java/net/titanium/config/BukkitConfig.java
+++ b/src/main/java/net/titanium/config/BukkitConfig.java
@@ -25,6 +25,9 @@ public class BukkitConfig extends TitaniumConfigSection {
         @Comment("On restart, plugins in this folder will be moved and updated.")
         public String updateFolder = "update";
 
+        @Comment("TBH I don't know what is it, but maybe here it is explained better https://bukkit.fandom.com/wiki/Permissions.yml.")
+        public String permissionsFile = "permissions.yml";
+
         @Comment("Enable the /timings command to track the execution time of events by plugins.")
         public boolean pluginProfiling = false;
 
diff --git a/src/main/java/net/titanium/config/PaperConfig.java b/src/main/java/net/titanium/config/PaperConfig.java
index 365a9ab5..6a3de4c9 100644
--- a/src/main/java/net/titanium/config/PaperConfig.java
+++ b/src/main/java/net/titanium/config/PaperConfig.java
@@ -1,5 +1,6 @@
 package net.titanium.config;
 
+import app.ashcon.sportpaper.server.KnockbackModificationCommand;
 import eu.okaeri.configs.OkaeriConfig;
 import eu.okaeri.configs.annotation.Comment;
 import eu.okaeri.configs.annotation.CustomKey;
@@ -17,6 +18,7 @@ import net.minecraft.server.Items;
 import org.apache.commons.lang.StringUtils;
 import org.bukkit.Bukkit;
 import org.bukkit.Material;
+import org.spigotmc.RestartCommand;
 
 @Names(strategy = NameStrategy.HYPHEN_CASE, modifier = NameModifier.TO_LOWER_CASE)
 public class PaperConfig extends TitaniumConfigSection {
@@ -166,6 +168,7 @@ public class PaperConfig extends TitaniumConfigSection {
     public Knockback knockback = new Knockback();
 
     public static class Knockback extends TitaniumConfigSection {
+
         public double friction = 2.0;
         public double horizontal = 0.4;
         public double vertical = 0.4;
@@ -175,8 +178,9 @@ public class PaperConfig extends TitaniumConfigSection {
 
         @Override
         public void loadProcessedProperties() {
-
+            TitaniumConfig.COMMANDS.put("knockback", new KnockbackModificationCommand("knockback", friction, horizontal, vertical, verticalLimit, extraHorizontal, extraVertical));
         }
+
     }
 
     public PaperWorldConfig worldSettings = new PaperWorldConfig();
diff --git a/src/main/java/net/titanium/config/TitaniumConfig.java b/src/main/java/net/titanium/config/TitaniumConfig.java
index 48b75858..5a7770eb 100644
--- a/src/main/java/net/titanium/config/TitaniumConfig.java
+++ b/src/main/java/net/titanium/config/TitaniumConfig.java
@@ -8,8 +8,14 @@ import eu.okaeri.configs.annotation.NameModifier;
 import eu.okaeri.configs.annotation.NameStrategy;
 import eu.okaeri.configs.annotation.Names;
 import eu.okaeri.configs.exception.OkaeriException;
+import java.util.HashMap;
+import java.util.Map;
+import net.minecraft.server.MinecraftServer;
 import org.bukkit.Bukkit;
 import org.bukkit.ChatColor;
+import org.bukkit.command.Command;
+import org.spigotmc.RestartCommand;
+import org.spigotmc.TicksPerSecondCommand;
 
 @Header("This is the main configuration file for Titanium.")
 @Header("It's collect all the settings from bukkit.yml, spigot.yml etc.")
@@ -23,6 +29,9 @@ public class TitaniumConfig extends OkaeriConfig {
     @Exclude
     private static TitaniumConfig INSTANCE;
 
+    @Exclude
+    public static Map<String, Command> COMMANDS = new HashMap<>();
+
     @Comment("Configuration from bukkit.yml")
     public BukkitConfig bukkit = new BukkitConfig();
 
@@ -39,12 +48,21 @@ public class TitaniumConfig extends OkaeriConfig {
         INSTANCE = this;
 
         spigot.loadProperties();
-
         paper.loadProperties();
 
+        COMMANDS.put("restart", new RestartCommand("restart"));
+        COMMANDS.put("tps", new TicksPerSecondCommand("tps"));
+
         return this;
     }
 
+    public void registerCommands() {
+        COMMANDS.forEach((key, commands) ->
+                MinecraftServer.getServer().server
+                        .getCommandMap()
+                        .register(key, "Titanium", commands));
+    }
+
     public static TitaniumConfig get() {
         return INSTANCE;
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 72967037..57153025 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -217,16 +217,17 @@ public final class CraftServer implements Server {
         });
         // Titanium end
 
-        overrideAllCommandBlockCommands = SharedConfig.config.getStringList("commands.command-block-overrides").contains("*");
-        ((SimplePluginManager) pluginManager).useTimings(BukkitConfig.pluginProfiling);
-        monsterSpawn = BukkitConfig.monsterSpawnLimit;
-        animalSpawn = BukkitConfig.animalSpawnLimit;
-        waterAnimalSpawn = BukkitConfig.waterAnimalSpawnLimit;
-        ambientSpawn = BukkitConfig.ambientSpawnLimit;
-        console.autosavePeriod = BukkitConfig.ticksPerAutosave;
-        warningState = WarningState.value(BukkitConfig.deprecatedVerbose);
-        chunkGCPeriod = BukkitConfig.chunkGCPeriodInTicks;
-        chunkGCLoadThresh = BukkitConfig.chunkGCLoadThreshold;
+        // overrideAllCommandBlockCommands = SharedConfig.config.getStringList("commands.command-block-overrides").contains("*"); //TODO add this to config
+        net.titanium.config.BukkitConfig bukkit = serverConfig.bukkit;
+        ((SimplePluginManager) pluginManager).useTimings(bukkit.settings.pluginProfiling);
+        monsterSpawn = bukkit.spawnLimits.monsters;
+        animalSpawn = bukkit.spawnLimits.animals;
+        waterAnimalSpawn = bukkit.spawnLimits.waterAnimals;
+        ambientSpawn = bukkit.spawnLimits.ambient;
+        console.autosavePeriod = bukkit.ticksPer.autosave;
+        warningState = bukkit.settings.deprecatedVerbose;
+        chunkGCPeriod = bukkit.chunkGC.periodInTicks;
+        chunkGCLoadThresh = bukkit.chunkGC.loadThreshold;
         loadIcon();
 
         // Spigot Start - Moved to old location of new DedicatedPlayerList in DedicatedServer
@@ -513,7 +514,7 @@ public final class CraftServer implements Server {
 
     @Override
     public boolean getAllowEnd() {
-        return BukkitConfig.allowEnd;
+        return serverConfig.bukkit.settings.allowEnd;
     }
 
     @Override
@@ -522,11 +523,11 @@ public final class CraftServer implements Server {
     }
 
     public boolean getWarnOnOverload() {
-        return BukkitConfig.warnOnOverlaod;
+        return serverConfig.bukkit.settings.warnOnOverload;
     }
 
     public boolean getQueryPlugins() {
-        return BukkitConfig.queryPlugins;
+        return serverConfig.bukkit.settings.queryPlugins;
     }
 
     @Override
@@ -551,7 +552,7 @@ public final class CraftServer implements Server {
 
     @Override
     public String getUpdateFolder() {
-        return BukkitConfig.updateFolder;
+        return serverConfig.bukkit.settings.updateFolder;
     }
 
     @Override
@@ -565,19 +566,19 @@ public final class CraftServer implements Server {
         if (org.spigotmc.SpigotConfig.bungee) {
             return -1;
         } else {
-            return BukkitConfig.connectionThrottle;
+            return serverConfig.bukkit.settings.connectionThrottle;
         }
         // Spigot End
     }
 
     @Override
     public int getTicksPerAnimalSpawns() {
-        return BukkitConfig.ticksPerAnimalSpawn;
+        return serverConfig.bukkit.ticksPer.animalSpawns;
     }
 
     @Override
     public int getTicksPerMonsterSpawns() {
-        return BukkitConfig.ticksPerMonsterSpawn;
+        return serverConfig.bukkit.ticksPer.monstersSpawn;
     }
 
     @Override
@@ -696,7 +697,7 @@ public final class CraftServer implements Server {
 
     @SuppressWarnings({ "unchecked", "finally" })
     private void loadCustomPermissions() {
-        File file = new File(BukkitConfig.permissionsFile);
+        File file = new File(serverConfig.bukkit.settings.permissionsFile);
         FileInputStream stream;
 
         try {
@@ -1044,12 +1045,14 @@ public final class CraftServer implements Server {
     public void configureDbConfig(ServerConfig config) {
         Validate.notNull(config, "Config cannot be null");
 
+        net.titanium.config.BukkitConfig.Database dbConfig = new net.titanium.config.BukkitConfig.Database();
+
         DataSourceConfig ds = new DataSourceConfig();
-        ds.setDriver(BukkitConfig.databaseDriver);
-        ds.setUrl(BukkitConfig.databaseUrl);
-        ds.setUsername(BukkitConfig.databaseUsername);
-        ds.setPassword(BukkitConfig.databasePassword);
-        ds.setIsolationLevel(TransactionIsolation.getLevel(BukkitConfig.databaseIsolation));
+        ds.setDriver(dbConfig.driver);
+        ds.setUrl(dbConfig.url);
+        ds.setUsername(dbConfig.username);
+        ds.setPassword(dbConfig.password);
+        ds.setIsolationLevel(TransactionIsolation.getLevel(dbConfig.isolation));
 
         if (ds.getDriver().contains("sqlite")) {
             config.setDatabasePlatform(new SQLitePlatform());
@@ -1128,7 +1131,7 @@ public final class CraftServer implements Server {
 
     @Override
     public String getShutdownMessage() {
-        return BukkitConfig.shutdownMessage;
+        return serverConfig.bukkit.settings.shutdownMessage;
     }
 
     @Override
@@ -1160,11 +1163,11 @@ public final class CraftServer implements Server {
 
     @Override
     public boolean useExactLoginLocation() {
-        return BukkitConfig.useExactLoginLocation;
+        return serverConfig.bukkit.settings.useExactLoginLocation;
     }
 
     public ChunkGenerator getGenerator(String world) {
-        ConfigurationSection section = BukkitConfig.getConfigurationSection("worlds");
+        ConfigurationSection section = BukkitConfig.getConfigurationSection("worlds"); //TODO Move this somewhere
         ChunkGenerator result = null;
 
         if (section != null) {
@@ -1425,7 +1428,7 @@ public final class CraftServer implements Server {
         }
 
         if (container == null) {
-            container = new File(BukkitConfig.worldContainer);
+            container = new File(serverConfig.bukkit.settings.worldContainer);
         }
 
         return container;
diff --git a/src/main/java/org/github/paperspigot/BukkitConfig.java b/src/main/java/org/github/paperspigot/BukkitConfig.java
index 169673d6..31fd0e6d 100644
--- a/src/main/java/org/github/paperspigot/BukkitConfig.java
+++ b/src/main/java/org/github/paperspigot/BukkitConfig.java
@@ -7,6 +7,7 @@ import org.bukkit.configuration.file.YamlConfiguration;
 import java.util.List;
 import java.util.Map;
 
+@Deprecated
 public class BukkitConfig {
 
     public static YamlConfiguration config;
diff --git a/src/main/java/org/github/paperspigot/PaperSpigotConfig.java b/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
index 8d58d1f3..158eb3eb 100644
--- a/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
+++ b/src/main/java/org/github/paperspigot/PaperSpigotConfig.java
@@ -13,6 +13,7 @@ import org.bukkit.Material;
 import org.bukkit.command.Command;
 import org.bukkit.configuration.file.YamlConfiguration;
 
+@Deprecated
 public class PaperSpigotConfig
 {
     public static YamlConfiguration config;
diff --git a/src/main/java/org/github/paperspigot/PaperSpigotWorldConfig.java b/src/main/java/org/github/paperspigot/PaperSpigotWorldConfig.java
index abe82f36..75a88c8a 100644
--- a/src/main/java/org/github/paperspigot/PaperSpigotWorldConfig.java
+++ b/src/main/java/org/github/paperspigot/PaperSpigotWorldConfig.java
@@ -6,6 +6,7 @@ import net.minecraft.server.MinecraftServer;
 import org.bukkit.Bukkit;
 import org.bukkit.configuration.file.YamlConfiguration;
 
+@Deprecated
 public class PaperSpigotWorldConfig
 {
     private static YamlConfiguration config;
diff --git a/src/main/java/org/github/paperspigot/SharedConfig.java b/src/main/java/org/github/paperspigot/SharedConfig.java
index c79ad514..22134067 100644
--- a/src/main/java/org/github/paperspigot/SharedConfig.java
+++ b/src/main/java/org/github/paperspigot/SharedConfig.java
@@ -18,6 +18,7 @@ import java.util.HashMap;
 import java.util.Map;
 import java.util.logging.Level;
 
+@Deprecated
 public class SharedConfig {
 
     private static File CONFIG_FILE;
@@ -52,6 +53,7 @@ public class SharedConfig {
     }
 
     public static void registerCommands() {
+        /* Titanium start
         for (Map.Entry<String, Command> entry : commands.entrySet()) {
             MinecraftServer.
                     getServer().
@@ -59,6 +61,7 @@ public class SharedConfig {
                     getCommandMap().
                     register(entry.getKey(), "SportPaper", entry.getValue());
         }
+        Titanium end */
     }
 
     public static void readConfig(Class<?> clazz, Object instance) {
diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index 2b9358b2..b18ac3f5 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -23,6 +23,7 @@ import co.aikar.timings.Timings;
 import co.aikar.timings.TimingsManager;
 import org.github.paperspigot.SharedConfig;
 
+@Deprecated
 public class SpigotConfig
 {
     public static YamlConfiguration config;
diff --git a/src/main/java/org/spigotmc/SpigotWorldConfig.java b/src/main/java/org/spigotmc/SpigotWorldConfig.java
index 6438268d..a7ecf41b 100644
--- a/src/main/java/org/spigotmc/SpigotWorldConfig.java
+++ b/src/main/java/org/spigotmc/SpigotWorldConfig.java
@@ -6,6 +6,7 @@ import org.bukkit.Bukkit;
 import org.bukkit.configuration.file.YamlConfiguration;
 import org.github.paperspigot.SharedConfig;
 
+@Deprecated
 public class SpigotWorldConfig
 {
     private static YamlConfiguration config;
-- 
2.32.0.windows.2

