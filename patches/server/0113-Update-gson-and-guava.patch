From 5e747ed4c640b15a5d6abde846f80dc3ff59ce3c Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Tue, 7 Jun 2022 14:57:10 +0200
Subject: [PATCH] Update gson and guava


diff --git a/src/main/java/net/minecraft/server/BaseBlockPosition.java b/src/main/java/net/minecraft/server/BaseBlockPosition.java
index a685e081..e7cf210b 100644
--- a/src/main/java/net/minecraft/server/BaseBlockPosition.java
+++ b/src/main/java/net/minecraft/server/BaseBlockPosition.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.google.common.base.MoreObjects;
 import com.google.common.base.Objects;
 
 public class BaseBlockPosition implements Comparable<BaseBlockPosition> {
@@ -80,7 +81,7 @@ public class BaseBlockPosition implements Comparable<BaseBlockPosition> {
     }
 
     public String toString() {
-        return Objects.toStringHelper(this).add("x", this.getX()).add("y", this.getY()).add("z", this.getZ()).toString();
+        return MoreObjects.toStringHelper(this).add("x", this.getX()).add("y", this.getY()).add("z", this.getZ()).toString();
     }
 
     // Paperspigot - Signature change, Object -> BaseBlockPosition
diff --git a/src/main/java/net/minecraft/server/BlockState.java b/src/main/java/net/minecraft/server/BlockState.java
index 3cada5af..5aaf8105 100644
--- a/src/main/java/net/minecraft/server/BlockState.java
+++ b/src/main/java/net/minecraft/server/BlockState.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.google.common.base.MoreObjects;
 import com.google.common.base.Objects;
 
 public abstract class BlockState<T extends Comparable<T>> implements IBlockState<T> {
@@ -21,7 +22,7 @@ public abstract class BlockState<T extends Comparable<T>> implements IBlockState
     }
 
     public String toString() {
-        return Objects.toStringHelper(this).add("name", this.b).add("clazz", this.a).add("values", this.c()).toString();
+        return MoreObjects.toStringHelper(this).add("name", this.b).add("clazz", this.a).add("values", this.c()).toString();
     }
 
     public boolean equals(Object object) {
diff --git a/src/main/java/net/minecraft/server/BlockStateList.java b/src/main/java/net/minecraft/server/BlockStateList.java
index 6559cc50..4b8d232a 100644
--- a/src/main/java/net/minecraft/server/BlockStateList.java
+++ b/src/main/java/net/minecraft/server/BlockStateList.java
@@ -2,6 +2,7 @@ package net.minecraft.server;
 
 import com.google.common.base.Function;
 import com.google.common.base.Joiner;
+import com.google.common.base.MoreObjects;
 import com.google.common.base.Objects;
 import com.google.common.collect.HashBasedTable;
 import com.google.common.collect.ImmutableList;
@@ -101,7 +102,7 @@ public class BlockStateList {
     }
 
     public String toString() {
-        return Objects.toStringHelper(this).add("block", Block.REGISTRY.c(this.c)).add("properties", Iterables.transform(this.d, BlockStateList.b)).toString();
+        return MoreObjects.toStringHelper(this).add("block", Block.REGISTRY.c(this.c)).add("properties", Iterables.transform(this.d, BlockStateList.b)).toString();
     }
 
     static class BlockData extends BlockDataAbstract {
diff --git a/src/main/java/net/minecraft/server/BlockTripwireHook.java b/src/main/java/net/minecraft/server/BlockTripwireHook.java
index 0ad4a20f..625d1d53 100644
--- a/src/main/java/net/minecraft/server/BlockTripwireHook.java
+++ b/src/main/java/net/minecraft/server/BlockTripwireHook.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.google.common.base.MoreObjects;
 import com.google.common.base.Objects;
 import com.google.common.base.Predicate;
 import java.util.Iterator;
@@ -113,7 +114,7 @@ public class BlockTripwireHook extends Block {
                 flag5 = false;
             } else {
                 if (k == i) {
-                    iblockdata2 = (IBlockData) Objects.firstNonNull(iblockdata1, iblockdata2);
+                    iblockdata2 = (IBlockData) MoreObjects.firstNonNull(iblockdata1, iblockdata2);
                 }
 
                 boolean flag7 = !((Boolean) iblockdata2.get(BlockTripwire.DISARMED)).booleanValue();
diff --git a/src/main/java/net/minecraft/server/EntitySlice.java b/src/main/java/net/minecraft/server/EntitySlice.java
index ae6c52f2..2aee73de 100644
--- a/src/main/java/net/minecraft/server/EntitySlice.java
+++ b/src/main/java/net/minecraft/server/EntitySlice.java
@@ -5,6 +5,7 @@ import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
 import java.util.AbstractSet;
+import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
@@ -114,7 +115,7 @@ public class EntitySlice<T> extends AbstractSet<T> {
                 List list = (List) EntitySlice.this.b.get(EntitySlice.this.b(oclass));
 
                 if (list == null) {
-                    return Iterators.emptyIterator();
+                    return Collections.emptyIterator();
                 } else {
                     Iterator iterator = list.iterator();
 
@@ -125,7 +126,7 @@ public class EntitySlice<T> extends AbstractSet<T> {
     }
 
     public Iterator<T> iterator() {
-        return this.e.isEmpty() ? Iterators.<T>emptyIterator() : Iterators.unmodifiableIterator(this.e.iterator());
+        return this.e.isEmpty() ? Collections.emptyIterator(): Iterators.unmodifiableIterator(this.e.iterator());
     }
 
     public int size() {
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java b/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
index fc5ad291..5d28cb4e 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.google.common.base.MoreObjects;
 import com.google.common.base.Objects;
 import com.google.common.collect.Lists;
 import com.mojang.authlib.GameProfile;
@@ -169,7 +170,7 @@ public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut> {
     }
 
     public String toString() {
-        return Objects.toStringHelper(this).add("action", this.a).add("entries", this.b).toString();
+        return MoreObjects.toStringHelper(this).add("action", this.a).add("entries", this.b).toString();
     }
 
     static class SyntheticClass_1 {
@@ -241,7 +242,7 @@ public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut> {
         }
 
         public String toString() {
-            return Objects.toStringHelper(this).add("latency", this.b).add("gameMode", this.c).add("profile", this.d).add("displayName", this.e == null ? null : IChatBaseComponent.ChatSerializer.a(this.e)).toString();
+            return MoreObjects.toStringHelper(this).add("latency", this.b).add("gameMode", this.c).add("profile", this.d).add("displayName", this.e == null ? null : IChatBaseComponent.ChatSerializer.a(this.e)).toString();
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/ShapeDetector.java b/src/main/java/net/minecraft/server/ShapeDetector.java
index 765f8eb9..11109bfa 100644
--- a/src/main/java/net/minecraft/server/ShapeDetector.java
+++ b/src/main/java/net/minecraft/server/ShapeDetector.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.google.common.base.MoreObjects;
 import com.google.common.base.Objects;
 import com.google.common.base.Predicate;
 import com.google.common.cache.CacheBuilder;
@@ -146,7 +147,7 @@ public class ShapeDetector {
         }
 
         public String toString() {
-            return Objects.toStringHelper(this).add("up", this.c).add("forwards", this.b).add("frontTopLeft", this.a).toString();
+            return MoreObjects.toStringHelper(this).add("up", this.c).add("forwards", this.b).add("frontTopLeft", this.a).toString();
         }
     }
 
diff --git a/src/main/java/net/minecraft/server/StructureBoundingBox.java b/src/main/java/net/minecraft/server/StructureBoundingBox.java
index d6c2aac9..0a065f93 100644
--- a/src/main/java/net/minecraft/server/StructureBoundingBox.java
+++ b/src/main/java/net/minecraft/server/StructureBoundingBox.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.google.common.base.MoreObjects;
 import com.google.common.base.Objects;
 
 public class StructureBoundingBox {
@@ -139,7 +140,7 @@ public class StructureBoundingBox {
     }
 
     public String toString() {
-        return Objects.toStringHelper(this).add("x0", this.a).add("y0", this.b).add("z0", this.c).add("x1", this.d).add("y1", this.e).add("z1", this.f).toString();
+        return MoreObjects.toStringHelper(this).add("x0", this.a).add("y0", this.b).add("z0", this.c).add("x1", this.d).add("y1", this.e).add("z1", this.f).toString();
     }
 
     public NBTTagIntArray g() {
diff --git a/src/main/java/net/minecraft/server/WorldGenCaves.java b/src/main/java/net/minecraft/server/WorldGenCaves.java
index 2cdd0237..219be66a 100644
--- a/src/main/java/net/minecraft/server/WorldGenCaves.java
+++ b/src/main/java/net/minecraft/server/WorldGenCaves.java
@@ -1,5 +1,6 @@
 package net.minecraft.server;
 
+import com.google.common.base.MoreObjects;
 import com.google.common.base.Objects;
 import java.util.Random;
 
@@ -140,7 +141,7 @@ public class WorldGenCaves extends WorldGenBase {
 
                                         if (d14 > -0.7D && d12 * d12 + d14 * d14 + d13 * d13 < 1.0D) {
                                             IBlockData iblockdata1 = chunksnapshot.a(j3, j4, i4);
-                                            IBlockData iblockdata2 = (IBlockData) Objects.firstNonNull(chunksnapshot.a(j3, j4 + 1, i4), Blocks.AIR.getBlockData());
+                                            IBlockData iblockdata2 = (IBlockData) MoreObjects.firstNonNull(chunksnapshot.a(j3, j4 + 1, i4), Blocks.AIR.getBlockData());
 
                                             if (iblockdata1.getBlock() == Blocks.GRASS || iblockdata1.getBlock() == Blocks.MYCELIUM) {
                                                 flag3 = true;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 2ed7fc1b..ab00209f 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -188,7 +188,7 @@ public final class CraftServer implements Server {
     private final LoaderOptions loaderOptions = new LoaderOptions();
     private final Yaml yaml = new Yaml(new SafeConstructor(), new Representer(), new DumperOptions(), loaderOptions);
     // KigPaper end
-    private final Map<UUID, OfflinePlayer> offlinePlayers = new MapMaker().softValues().makeMap();
+    private final Map<UUID, OfflinePlayer> offlinePlayers = new MapMaker().weakValues().makeMap();
     private final EntityMetadataStore entityMetadata = new EntityMetadataStore();
     private final PlayerMetadataStore playerMetadata = new PlayerMetadataStore();
     private final WorldMetadataStore worldMetadata = new WorldMetadataStore();
-- 
2.36.0.windows.1

