From f2900ca17dcd9d8ec866149f5a998214c6002131 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Wed, 3 Aug 2022 08:48:51 +0200
Subject: [PATCH] Fix setting up entity tracker by windocolor-dev and some
 improvements


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index ada8e243..35c80129 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -11,6 +11,7 @@ import com.google.common.collect.Lists;
 import com.google.common.collect.MapMaker;
 import com.mojang.authlib.GameProfile;
 import eu.okaeri.configs.OkaeriConfig;
+import ga.windpvp.windspigot.async.entitytracker.AsyncEntityTracker;
 import io.netty.buffer.ByteBuf;
 import io.netty.buffer.ByteBufOutputStream;
 import io.netty.buffer.Unpooled;
@@ -1092,7 +1093,13 @@ public final class CraftServer implements Server {
 
         internal.scoreboard = getScoreboardManager().getMainScoreboard().getHandle();
 
-        internal.tracker = new EntityTracker(internal);
+        // WindSpigot start
+        if (TitaniumConfig.get().entityTracker.async.enabled) {
+            internal.tracker = new AsyncEntityTracker(internal);
+        } else {
+            internal.tracker = new EntityTracker(internal);
+        }
+        // WindSpigot end
         internal.addIWorldAccess(new WorldManager(console, internal));
         internal.worldData.setDifficulty(EnumDifficulty.EASY);
         internal.setSpawnFlags(true, true);
@@ -1103,7 +1110,7 @@ public final class CraftServer implements Server {
         }
 
         pluginManager.callEvent(new WorldInitEvent(internal.getWorld()));
-        System.out.print("Preparing start region for level " + (console.worlds.size() - 1) + " (Seed: " + internal.getSeed() + ")");
+        logger.info("Preparing start region for level " + (console.worlds.size() - 1) + " (Seed: " + internal.getSeed() + ")"); // Titanium - use logger (instead System.out)
 
         if (internal.getWorld().getKeepSpawnInMemory()) {
             short short1 = 196;
@@ -1120,7 +1127,7 @@ public final class CraftServer implements Server {
                         int i1 = (short1 * 2 + 1) * (short1 * 2 + 1);
                         int j1 = (j + short1) * (short1 * 2 + 1) + k + 1;
 
-                        System.out.println("Preparing spawn area for " + name + ", " + (j1 * 100 / i1) + "%");
+                        logger.info("Preparing spawn area for " + name + ", " + (j1 * 100 / i1) + "%"); // Titanium - use logger (instead System.out)
                         i = l;
                     }
 
-- 
2.36.0.windows.1

