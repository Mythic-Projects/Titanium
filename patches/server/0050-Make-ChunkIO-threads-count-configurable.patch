From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Sun, 22 May 2022 22:29:04 +0200
Subject: [PATCH] Make ChunkIO threads count configurable


diff --git a/src/main/java/net/titanium/config/TitaniumConfig.java b/src/main/java/net/titanium/config/TitaniumConfig.java
index bfb8a4ee3b945f16ebfe33791572cc6483d8ce64..be0ff6a65b3d813e6246ca22faa8c0fbad3f06b4 100644
--- a/src/main/java/net/titanium/config/TitaniumConfig.java
+++ b/src/main/java/net/titanium/config/TitaniumConfig.java
@@ -50,13 +50,35 @@ public class TitaniumConfig extends TitaniumConfigSection {
     @Comment("Configuration from ion.yml")
     public IonConfig ion = new IonConfig();
 
-    public Commands commands = new Commands();
+    public Chunk chunk = new Chunk();
+
+    public static class Chunk extends TitaniumConfigSection {
+
+        @Comment("Configuration of chunk I/O (loading) since chunk loading is asynchronous.")
+        @Comment("If you have CPU with more threads changing these values can have good impact on performance.")
+        public IO io = new IO();
+
+        public static class IO extends TitaniumConfigSection {
+
+            @Comment("The amount of threads to use for chunk loading (start value).")
+            public int baseThreads = 2; // PaperSpigot - Bumped value
+
+            @Comment("When more players join the server, new threads will be created.")
+            @Comment("This values represents how many players are needed to create a new thread.")
+            @Comment("For eg. base-threads is 2, on server is 100 players, when one more joins server new thread will be created and so on.")
+            public int playersPerThread = 50;
+
+        }
+
+    }
 
     @Comment("When this option is enabled, the server will create a directory `legacy_configs` with files like bukkit.yml, spigot.yml etc.")
     @Comment("Changing option there will not affect the server, it's only mirror of this file.")
     @Comment("Enable this option only if some of your plugins are not compatible with the new configs.")
     public boolean enableLegacyConfigFiles = false;
 
+    public Commands commands = new Commands();
+
     public static class Commands extends TitaniumConfigSection {
 
         public Set<String> commandBlockOverrides = new HashSet<>();
diff --git a/src/main/java/org/bukkit/craftbukkit/chunkio/ChunkIOExecutor.java b/src/main/java/org/bukkit/craftbukkit/chunkio/ChunkIOExecutor.java
index 69e5da4c65da46ad9d1456266cd4ad15b136f6e4..f02cb17838ad6f9d6d36ba9d828ce8fb7a8c3b7f 100644
--- a/src/main/java/org/bukkit/craftbukkit/chunkio/ChunkIOExecutor.java
+++ b/src/main/java/org/bukkit/craftbukkit/chunkio/ChunkIOExecutor.java
@@ -4,11 +4,12 @@ import net.minecraft.server.Chunk;
 import net.minecraft.server.ChunkProviderServer;
 import net.minecraft.server.ChunkRegionLoader;
 import net.minecraft.server.World;
+import net.titanium.config.TitaniumConfig;
 import org.bukkit.craftbukkit.util.AsynchronousExecutor;
 
 public class ChunkIOExecutor {
-    static final int BASE_THREADS = 2; // PaperSpigot - Bumped value
-    static final int PLAYERS_PER_THREAD = 50;
+    static final int BASE_THREADS = TitaniumConfig.get().chunk.io.baseThreads; // PaperSpigot - Bumped value
+    static final int PLAYERS_PER_THREAD = TitaniumConfig.get().chunk.io.playersPerThread;
 
     private static final AsynchronousExecutor<QueuedChunk, Chunk, Runnable, RuntimeException> instance = new AsynchronousExecutor<QueuedChunk, Chunk, Runnable, RuntimeException>(new ChunkIOProvider(), BASE_THREADS);
 
