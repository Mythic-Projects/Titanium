plugins {
    id 'com.github.johnrengelman.shadow' version "7.1.2"
}

allprojects {
    group = 'net.titanvale'
    version = '1.8.8-R0.1-SNAPSHOT'

    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'

    ext {
        gitHash = project.getCurrentGitHash()
        gitBranch = System.getenv("BRANCH_NAME") ?: project.getCurrentGitBranch()
    }

    repositories {
        mavenCentral()
        maven { url 'https://libraries.minecraft.net' }
        maven { url 'https://repo.titanvale.net/releases' }
        maven { url 'https://repo.titanvale.net/snapshots' }
        maven { url 'https://storehouse.okaeri.eu/repository/maven-public' }
        maven { url 'https://repo.glaremasters.me/repository/concuncan/' }
    }
}

subprojects {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    compileJava.options.encoding = "UTF-8"
    compileTestJava.options.encoding = "UTF-8"

    java {
        withSourcesJar()
        withJavadocJar()
    }

    javadoc {
        options {
            links 'https://guava.dev/releases/21.0/api/docs/'
            links 'https://javadoc.io/doc/com.google.code.gson/gson/2.8.9'
            links 'https://javadoc.io/doc/org.yaml/snakeyaml/1.15/'
            links 'https://javadoc.io/doc/org.jetbrains/annotations/23.0.0'
            links 'https://javadoc.io/doc/net.md-5/bungeecord-chat/1.16-R0.4/'
        }
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }

    publishing {
        publications {
            libraries(MavenPublication) {
                from components.java

                versionMapping {
                    usage('java-runtime'){
                        fromResolutionOf("runtimeClasspath")
                    }
                }

                pom {
                    url = "https://github.com/TitaniumMC/Titanium"
                    name = project.name

                    developers {
                        developer {
                            id = "peridot"
                            name = "Peter"
                            email = "peridot491@protonmail.com"
                        }
                    }

                    scm {
                        connection = "scm:git:git://github.com/TitaniumMC/Titanium.git"
                        developerConnection = "scm:git:git://github.com/TitaniumMC/Titanium.git"
                        url = "https://github.com/TitaniumMC/Titanium.git"
                    }

                    licenses {
                        license {
                            name = "GPL-v3.0"
                            url  = "https://www.gnu.org/licenses/gpl-3.0.txt"
                        }
                    }
                }

                // Add external repositories to published artifacts
                // ~ btw: pls don't touch this
                // Original code: https://github.com/FunnyGuilds/FunnyGuilds/blob/master/build.gradle
                pom.withXml {
                    def repositories = asNode().appendNode('repositories')

                    project.getRepositories().findAll { repo ->
                        if (repo.getUrl().toString().startsWith('http')) {
                            def repository = repositories.appendNode('repository')
                            repository.appendNode('id', repo.getUrl().toString().replace("https://", "").replace("/", "-").replace(".", "-").trim())
                            repository.appendNode('url', repo.getUrl().toString())
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                name "snapshots"
                url "https://repo.titanvale.net/snapshots"

                String snapshotsUsername = System.getenv("SNAPSHOTS_USERNAME")
                String snapshotsPassword = System.getenv("SNAPSHOTS_PASSWORD")
                if (snapshotsUsername != null && snapshotsPassword != null) {
                    credentials {
                        username = snapshotsUsername
                        password = snapshotsPassword
                    }
                } else {
                    credentials(PasswordCredentials)
                }

                authentication {
                    basic(BasicAuthentication)
                }
            }
            maven {
                name "releases"
                url "https://repo.titanvale.net/releases"

                String releasesUsername = System.getenv("RELEASES_USERNAME")
                String releasesPassword = System.getenv("RELEASES_PASSWORD")
                if (releasesUsername != null && releasesPassword != null) {
                    credentials {
                        username = releasesUsername
                        password = releasesPassword
                    }
                } else {
                    credentials(PasswordCredentials)
                }

                authentication {
                    basic(BasicAuthentication)
                }
            }
        }
    }
}

def getCurrentGitBranch() {
    def gitBranch = "Unknown"
    try {
        def workingDir = new File("${project.projectDir}")
        def result = 'git rev-parse --abbrev-ref HEAD'.execute(null, workingDir)
        result.waitFor()
        if (result.exitValue() == 0) {
            gitBranch = result.text.trim()
        }
    } catch (ignored) {
    }
    return gitBranch
}

def getCurrentGitHash() {
    def gitHash = "Unknown"
    try {
        def workingDir = new File("${project.projectDir}")
        def result = 'git rev-parse --short HEAD'.execute(null, workingDir)
        result.waitFor()
        if (result.exitValue() == 0) {
            gitHash = result.text.trim()
        }
    } catch (ignored) {
    }
    return gitHash
}